com.adamp.android.birdgame.BuildConfig
com.adamp.android.birdgame.R
com.adamp.android.birdgame.R$attr
com.adamp.android.birdgame.R$drawable
com.adamp.android.birdgame.R$string
com.adamp.birdgame.BirdGame:
    public static final int HEIGHT
    public static final int WIDTH
com.adamp.birdgame.MainMenuScreen:
    79:79:public void dispose()
com.adamp.birdgame.Pigeon:
    public static final float DY
com.adamp.birdgame.PipePair:
    public static final float PIPE_WIDTH
    public static final float dx
com.adamp.birdgame.Resources:
    10:10:public Resources()
com.badlogic.gdx.Application:
    public static final int LOG_NONE
    public static final int LOG_DEBUG
    public static final int LOG_INFO
    public static final int LOG_ERROR
    public abstract com.badlogic.gdx.ApplicationListener getApplicationListener()
    public abstract com.badlogic.gdx.Audio getAudio()
    public abstract com.badlogic.gdx.Input getInput()
    public abstract com.badlogic.gdx.Files getFiles()
    public abstract com.badlogic.gdx.Net getNet()
    public abstract void log(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void error(java.lang.String,java.lang.String)
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void setLogLevel(int)
    public abstract int getLogLevel()
    public abstract int getVersion()
    public abstract long getJavaHeap()
    public abstract long getNativeHeap()
    public abstract com.badlogic.gdx.Preferences getPreferences(java.lang.String)
    public abstract com.badlogic.gdx.utils.Clipboard getClipboard()
    public abstract void exit()
com.badlogic.gdx.ApplicationAdapter
com.badlogic.gdx.Audio:
    public abstract com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    public abstract com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
    public abstract com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
    public abstract com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.Files:
    public abstract com.badlogic.gdx.files.FileHandle external(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle local(java.lang.String)
    public abstract boolean isExternalStorageAvailable()
    public abstract java.lang.String getLocalStoragePath()
    public abstract boolean isLocalStorageAvailable()
com.badlogic.gdx.Game:
    69:69:public com.badlogic.gdx.Screen getScreen()
com.badlogic.gdx.Gdx:
    34:34:public Gdx()
com.badlogic.gdx.Graphics:
    public abstract boolean isGL11Available()
    public abstract com.badlogic.gdx.graphics.GLCommon getGLCommon()
    public abstract com.badlogic.gdx.graphics.GL10 getGL10()
    public abstract com.badlogic.gdx.graphics.GL11 getGL11()
    public abstract float getRawDeltaTime()
    public abstract int getFramesPerSecond()
    public abstract com.badlogic.gdx.Graphics$GraphicsType getType()
    public abstract float getPpiX()
    public abstract float getPpiY()
    public abstract float getPpcX()
    public abstract float getPpcY()
    public abstract float getDensity()
    public abstract boolean supportsDisplayModeChange()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    public abstract com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
    public abstract boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    public abstract boolean setDisplayMode(int,int,boolean)
    public abstract void setTitle(java.lang.String)
    public abstract void setVSync(boolean)
    public abstract com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    public abstract void setContinuousRendering(boolean)
    public abstract boolean isContinuousRendering()
    public abstract boolean isFullscreen()
com.badlogic.gdx.Graphics$DisplayMode
com.badlogic.gdx.Graphics$GraphicsType
com.badlogic.gdx.Input:
    public abstract float getAccelerometerX()
    public abstract float getAccelerometerY()
    public abstract float getAccelerometerZ()
    public abstract int getX()
    public abstract int getX(int)
    public abstract int getDeltaX()
    public abstract int getDeltaX(int)
    public abstract int getY()
    public abstract int getY(int)
    public abstract int getDeltaY()
    public abstract int getDeltaY(int)
    public abstract boolean justTouched()
    public abstract boolean isButtonPressed(int)
    public abstract boolean isKeyPressed(int)
    public abstract void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void setOnscreenKeyboardVisible(boolean)
    public abstract void vibrate(int)
    public abstract void vibrate(long[],int)
    public abstract void cancelVibrate()
    public abstract float getAzimuth()
    public abstract float getPitch()
    public abstract float getRoll()
    public abstract void getRotationMatrix(float[])
    public abstract void setCatchBackKey(boolean)
    public abstract void setCatchMenuKey(boolean)
    public abstract com.badlogic.gdx.InputProcessor getInputProcessor()
    public abstract boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    public abstract int getRotation()
    public abstract com.badlogic.gdx.Input$Orientation getNativeOrientation()
    public abstract void setCursorCatched(boolean)
    public abstract boolean isCursorCatched()
    public abstract void setCursorPosition(int,int)
    public abstract void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.Input$Buttons
com.badlogic.gdx.Input$Keys
com.badlogic.gdx.Input$Peripheral
com.badlogic.gdx.Input$TextInputListener
com.badlogic.gdx.InputAdapter:
    49:49:public boolean mouseMoved(int,int)
    54:54:public boolean scrolled(int)
com.badlogic.gdx.InputMultiplexer
com.badlogic.gdx.InputProcessor:
    public abstract boolean mouseMoved(int,int)
    public abstract boolean scrolled(int)
com.badlogic.gdx.InputProcessorQueue
com.badlogic.gdx.Net:
    public abstract void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    public abstract com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    public abstract void openURI(java.lang.String)
com.badlogic.gdx.Net$HttpMethods
com.badlogic.gdx.Net$HttpRequest
com.badlogic.gdx.Net$HttpResponse
com.badlogic.gdx.Net$HttpResponseListener
com.badlogic.gdx.Net$Protocol
com.badlogic.gdx.Preferences
com.badlogic.gdx.Screen:
    public abstract void dispose()
com.badlogic.gdx.ScreenAdapter
com.badlogic.gdx.Version
com.badlogic.gdx.assets.AssetDescriptor:
    32:33:public AssetDescriptor(java.lang.String,java.lang.Class)
    37:38:public AssetDescriptor(com.badlogic.gdx.files.FileHandle,java.lang.Class)
    47:52:public AssetDescriptor(com.badlogic.gdx.files.FileHandle,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.AssetManager:
    82:83:public AssetManager()
    86:99:public AssetManager(com.badlogic.gdx.assets.loaders.FileHandleResolver)
    104:111:public synchronized java.lang.Object get(java.lang.String)
    118:124:public synchronized java.lang.Object get(java.lang.String,java.lang.Class)
    130:130:public synchronized java.lang.Object get(com.badlogic.gdx.assets.AssetDescriptor)
    198:204:public synchronized boolean containsAsset(java.lang.Object)
    230:234:public synchronized boolean isLoaded(java.lang.String,java.lang.Class)
    241:241:public com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class)
    268:269:public synchronized void load(java.lang.String,java.lang.Class)
    319:320:public synchronized void load(com.badlogic.gdx.assets.AssetDescriptor)
    325:335:private void disposeDependencies(java.lang.String)
    361:366:public boolean update(int)
    525:526:public synchronized void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader)
    534:540:public synchronized void setLoader(java.lang.Class,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader)
    544:544:public synchronized int getLoadedAssets()
    549:549:public synchronized int getQueuedAssets()
    554:555:public synchronized float getProgress()
    561:562:public synchronized void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
    615:615:public com.badlogic.gdx.utils.Logger getLogger()
    636:660:public synchronized java.lang.String getDiagnostics()
    665:665:public synchronized com.badlogic.gdx.utils.Array getAssetNames()
    670:670:public synchronized com.badlogic.gdx.utils.Array getDependencies(java.lang.String)
    675:675:public synchronized java.lang.Class getAssetType(java.lang.String)
com.badlogic.gdx.assets.RefCountedContainer:
    49:50:public void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.AssetLoader:
    35:37:public AssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader:
    32:33:public AsynchronousAssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.BitmapFontLoader
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter
com.badlogic.gdx.assets.loaders.ModelLoader
com.badlogic.gdx.assets.loaders.MusicLoader
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter
com.badlogic.gdx.assets.loaders.ParticleEffectLoader
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter
com.badlogic.gdx.assets.loaders.PixmapLoader
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter
com.badlogic.gdx.assets.loaders.SkinLoader
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter
com.badlogic.gdx.assets.loaders.SoundLoader
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    25:26:public SynchronousAssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter
com.badlogic.gdx.assets.loaders.TextureLoader:
    50:51:public TextureLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo:
    42:42:public TextureLoader$TextureLoaderInfo()
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution
com.badlogic.gdx.audio.AudioDevice
com.badlogic.gdx.audio.AudioRecorder
com.badlogic.gdx.audio.Music:
    public abstract void play()
    public abstract void pause()
    public abstract void stop()
    public abstract boolean isPlaying()
    public abstract void setLooping(boolean)
    public abstract boolean isLooping()
    public abstract void setVolume(float)
    public abstract float getVolume()
    public abstract void setPan(float,float)
    public abstract float getPosition()
    public abstract void dispose()
    public abstract void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.audio.Sound
com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard
    88:91:public void initialize(com.badlogic.gdx.ApplicationListener,boolean)
    173:175:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean)
    192:210:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    278:278:public com.badlogic.gdx.ApplicationListener getApplicationListener()
    318:318:public long getJavaHeap()
    323:323:public long getNativeHeap()
    328:328:public com.badlogic.gdx.Preferences getPreferences(java.lang.String)
    335:338:public com.badlogic.gdx.utils.Clipboard getClipboard()
    359:365:public void exit()
    376:379:public void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    393:394:public void error(java.lang.String,java.lang.String)
    403:404:public void setLogLevel(int)
    408:408:public int getLogLevel()
com.badlogic.gdx.backends.android.AndroidApplication$1
com.badlogic.gdx.backends.android.AndroidAudio:
    79:79:public com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    85:114:public com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle)
    123:138:public com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
    146:146:public com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudioDevice
com.badlogic.gdx.backends.android.AndroidAudioRecorder
com.badlogic.gdx.backends.android.AndroidClipboard
com.badlogic.gdx.backends.android.AndroidDaydream
com.badlogic.gdx.backends.android.AndroidDaydream$1
com.badlogic.gdx.backends.android.AndroidFileHandle:
    53:55:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    81:92:public com.badlogic.gdx.files.FileHandle[] list()
    96:117:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    121:128:public boolean isDirectory()
    132:146:public boolean exists()
    166:166:public long lastModified()
com.badlogic.gdx.backends.android.AndroidFiles:
    33:36:public AndroidFiles(android.content.res.AssetManager)
    60:60:public com.badlogic.gdx.files.FileHandle external(java.lang.String)
    65:65:public com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    70:71:public com.badlogic.gdx.files.FileHandle local(java.lang.String)
    81:81:public boolean isExternalStorageAvailable()
    86:86:public java.lang.String getLocalStoragePath()
    91:91:public boolean isLocalStorageAvailable()
com.badlogic.gdx.backends.android.AndroidGL10:
    36:37:public final void glActiveTexture(int)
    41:42:public final void glAlphaFunc(int,float)
    56:57:public final void glClear(int)
    61:62:public final void glClearColor(float,float,float,float)
    66:67:public final void glClearDepthf(float)
    71:72:public final void glClearStencil(int)
    81:82:public final void glColor4f(float,float,float,float)
    86:87:public final void glColorMask(boolean,boolean,boolean,boolean)
    103:104:public final void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    108:109:public final void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    113:114:public final void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    118:119:public final void glCullFace(int)
    128:129:public final void glDepthFunc(int)
    138:139:public final void glDepthRangef(float,float)
    173:174:public final void glFinish()
    178:179:public final void glFlush()
    183:184:public final void glFogf(int,float)
    188:189:public final void glFogfv(int,java.nio.FloatBuffer)
    193:194:public final void glFrontFace(int)
    198:199:public final void glFrustumf(float,float,float,float,float,float)
    208:208:public final int glGetError()
    223:224:public final void glHint(int,int)
    228:229:public final void glLightModelf(int,float)
    233:234:public final void glLightModelfv(int,java.nio.FloatBuffer)
    238:239:public final void glLightf(int,int,float)
    243:244:public final void glLightfv(int,int,java.nio.FloatBuffer)
    248:249:public final void glLineWidth(float)
    253:254:public final void glLoadIdentity()
    258:259:public final void glLoadMatrixf(java.nio.FloatBuffer)
    263:264:public final void glLogicOp(int)
    268:269:public final void glMaterialf(int,int,float)
    273:274:public final void glMaterialfv(int,int,java.nio.FloatBuffer)
    283:284:public final void glMultMatrixf(java.nio.FloatBuffer)
    288:289:public final void glMultiTexCoord4f(int,float,float,float,float)
    293:294:public final void glNormal3f(float,float,float)
    303:304:public final void glOrthof(float,float,float,float,float,float)
    313:314:public final void glPointSize(float)
    318:319:public final void glPolygonOffset(float,float)
    323:324:public final void glPopMatrix()
    328:329:public final void glPushMatrix()
    333:334:public final void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    338:339:public final void glRotatef(float,float,float,float)
    343:344:public final void glSampleCoverage(float,boolean)
    348:349:public final void glScalef(float,float,float)
    353:354:public final void glScissor(int,int,int,int)
    358:359:public final void glShadeModel(int)
    363:364:public final void glStencilFunc(int,int,int)
    368:369:public final void glStencilMask(int)
    373:374:public final void glStencilOp(int,int,int)
    383:384:public final void glTexEnvf(int,int,float)
    388:389:public final void glTexEnvfv(int,int,java.nio.FloatBuffer)
    405:406:public final void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    410:411:public final void glTranslatef(float,float,float)
    420:421:public final void glViewport(int,int,int,int)
    425:426:public final void glDeleteTextures(int,int[],int)
    430:431:public final void glFogfv(int,float[],int)
    435:436:public final void glGenTextures(int,int[],int)
    440:441:public final void glGetIntegerv(int,int[],int)
    445:446:public final void glLightModelfv(int,float[],int)
    450:451:public final void glLightfv(int,int,float[],int)
    460:461:public final void glMaterialfv(int,int,float[],int)
    465:466:public final void glMultMatrixf(float[],int)
    470:471:public final void glTexEnvfv(int,int,float[],int)
    476:476:public void glPolygonMode(int,int)
com.badlogic.gdx.backends.android.AndroidGL11:
    55:56:public void glClipPlanef(int,java.nio.FloatBuffer)
    60:61:public void glColor4ub(byte,byte,byte,byte)
    75:76:public void glGetBooleanv(int,java.nio.IntBuffer)
    80:81:public void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    85:86:public void glGetClipPlanef(int,java.nio.FloatBuffer)
    90:91:public void glGetFloatv(int,java.nio.FloatBuffer)
    95:96:public void glGetLightfv(int,int,java.nio.FloatBuffer)
    100:101:public void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    105:106:public void glGetPointerv(int,java.nio.Buffer[])
    110:111:public void glGetTexEnviv(int,int,java.nio.IntBuffer)
    115:116:public void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    120:121:public void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    125:125:public boolean glIsBuffer(int)
    130:130:public boolean glIsEnabled(int)
    135:135:public boolean glIsTexture(int)
    140:141:public void glPointParameterf(int,float)
    145:146:public void glPointParameterfv(int,java.nio.FloatBuffer)
    150:151:public void glPointSizePointerOES(int,int,java.nio.Buffer)
    155:156:public void glTexEnvi(int,int,int)
    160:161:public void glTexEnviv(int,int,java.nio.IntBuffer)
    165:166:public void glTexParameterfv(int,int,java.nio.FloatBuffer)
    170:171:public void glTexParameteri(int,int,int)
    175:176:public void glTexParameteriv(int,int,java.nio.IntBuffer)
    180:181:public void glClipPlanef(int,float[],int)
    185:186:public void glDeleteBuffers(int,int[],int)
    190:191:public void glGenBuffers(int,int[],int)
    195:196:public void glGetBooleanv(int,boolean[],int)
    200:201:public void glGetBufferParameteriv(int,int,int[],int)
    205:206:public void glGetClipPlanef(int,float[],int)
    210:211:public void glGetFloatv(int,float[],int)
    215:216:public void glGetLightfv(int,int,float[],int)
    220:221:public void glGetMaterialfv(int,int,float[],int)
    225:226:public void glGetTexEnviv(int,int,int[],int)
    230:231:public void glGetTexParameterfv(int,int,float[],int)
    235:236:public void glGetTexParameteriv(int,int,int[],int)
    240:241:public void glPointParameterfv(int,float[],int)
    245:246:public void glTexEnviv(int,int,int[],int)
    250:251:public void glTexParameterfv(int,int,float[],int)
    255:256:public void glTexParameteriv(int,int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL20:
    public native void glActiveTexture(int)
    public native void glBindAttribLocation(int,int,java.lang.String)
    public native void glBlendColor(float,float,float,float)
    public native void glBlendEquation(int)
    public native void glBlendEquationSeparate(int,int)
    public native void glBlendFuncSeparate(int,int,int,int)
    public native void glClear(int)
    public native void glClearColor(float,float,float,float)
    public native void glClearDepthf(float)
    public native void glClearStencil(int)
    public native void glColorMask(boolean,boolean,boolean,boolean)
    public native void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public native void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public native void glCullFace(int)
    public native void glDepthFunc(int)
    public native void glDepthRangef(float,float)
    public native void glDetachShader(int,int)
    public native void glFinish()
    public native void glFlush()
    public native void glFrontFace(int)
    public native void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public native void glGetBooleanv(int,java.nio.Buffer)
    public native void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public native int glGetError()
    public native void glGetFloatv(int,java.nio.FloatBuffer)
    public native void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public native void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public native void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public native void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public native void glGetUniformiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public native void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public native void glHint(int,int)
    public native boolean glIsBuffer(int)
    public native boolean glIsEnabled(int)
    public native boolean glIsFramebuffer(int)
    public native boolean glIsProgram(int)
    public native boolean glIsRenderbuffer(int)
    public native boolean glIsShader(int)
    public native boolean glIsTexture(int)
    public native void glLineWidth(float)
    public native void glPolygonOffset(float,float)
    public native void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public native void glReleaseShaderCompiler()
    public native void glSampleCoverage(float,boolean)
    public native void glScissor(int,int,int,int)
    public native void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public native void glStencilFunc(int,int,int)
    public native void glStencilFuncSeparate(int,int,int,int)
    public native void glStencilMask(int)
    public native void glStencilMaskSeparate(int,int)
    public native void glStencilOp(int,int,int)
    public native void glStencilOpSeparate(int,int,int,int)
    public native void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glTexParameteri(int,int,int)
    public native void glTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glUniform1f(int,float)
    public native void glUniform1fv(int,int,java.nio.FloatBuffer)
    public native void glUniform1iv(int,int,java.nio.IntBuffer)
    public native void glUniform2f(int,float,float)
    public native void glUniform2fv(int,int,java.nio.FloatBuffer)
    public native void glUniform2i(int,int,int)
    public native void glUniform2iv(int,int,java.nio.IntBuffer)
    public native void glUniform3f(int,float,float,float)
    public native void glUniform3fv(int,int,java.nio.FloatBuffer)
    public native void glUniform3i(int,int,int,int)
    public native void glUniform3iv(int,int,java.nio.IntBuffer)
    public native void glUniform4f(int,float,float,float,float)
    public native void glUniform4fv(int,int,java.nio.FloatBuffer)
    public native void glUniform4i(int,int,int,int,int)
    public native void glUniform4iv(int,int,java.nio.IntBuffer)
    public native void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glValidateProgram(int)
    public native void glVertexAttrib1f(int,float)
    public native void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib2f(int,float,float)
    public native void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib3f(int,float,float,float)
    public native void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib4f(int,float,float,float,float)
    public native void glVertexAttrib4fv(int,java.nio.FloatBuffer)
    public native void glViewport(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGraphics:
    246:246:public com.badlogic.gdx.graphics.GL10 getGL10()
    252:252:public com.badlogic.gdx.graphics.GL11 getGL11()
    276:276:public boolean isGL11Available()
    286:286:private static boolean isPowerOfTwo(int)
    543:543:public float getRawDeltaTime()
    549:549:public com.badlogic.gdx.Graphics$GraphicsType getType()
    555:555:public int getFramesPerSecond()
    577:577:public com.badlogic.gdx.graphics.GLCommon getGLCommon()
    582:582:public float getPpiX()
    587:587:public float getPpiY()
    592:592:public float getPpcX()
    597:597:public float getPpcY()
    602:602:public float getDensity()
    607:607:public boolean supportsDisplayModeChange()
    612:612:public boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    617:617:public com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    622:622:public boolean setDisplayMode(int,int,boolean)
    628:628:public void setTitle(java.lang.String)
    638:640:public com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
    645:645:public com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    650:650:public void setVSync(boolean)
    685:685:public boolean isFullscreen()
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$3
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$4
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode
com.badlogic.gdx.backends.android.AndroidInput:
    int[] touchX
    int[] touchY
    final boolean hasMultitouch
    private java.lang.String text
    private com.badlogic.gdx.Input$TextInputListener textListener
    private android.os.Handler handle
    protected final android.os.Vibrator vibrator
    private float azimuth
    private float pitch
    private float roll
    private float inclination
    private final com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard
    final float[] R
    final float[] orientation
    133:171:public AndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    175:175:public float getAccelerometerX()
    180:180:public float getAccelerometerY()
    185:185:public float getAccelerometerZ()
    190:232:public void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    235:267:public void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    271:273:public int getX()
    278:280:public int getY()
    285:287:public int getX(int)
    292:294:public int getY(int)
    305:310:public boolean isKeyPressed(int)
    419:420:public void onTap(int,int)
    426:427:public void onDrop(int,int)
    430:448:protected void postTap(int,int)
    527:540:public void setOnscreenKeyboardVisible(boolean)
    544:545:public void setCatchBackKey(boolean)
    549:550:public void setCatchMenuKey(boolean)
    554:555:public void vibrate(int)
    559:560:public void vibrate(long[],int)
    564:565:public void cancelVibrate()
    569:569:public boolean justTouched()
    574:577:public boolean isButtonPressed(int)
    584:590:private void updateOrientation()
    598:599:public void getRotationMatrix(float[])
    603:606:public float getAzimuth()
    611:614:public float getPitch()
    619:622:public float getRoll()
    673:673:public com.badlogic.gdx.InputProcessor getInputProcessor()
    678:684:public boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    688:696:public int getFreePointerIndex()
    700:710:public int lookUpPointerIndex(int)
    715:733:public int getRotation()
    739:739:public com.badlogic.gdx.Input$Orientation getNativeOrientation()
    744:744:public void setCursorCatched(boolean)
    748:748:public boolean isCursorCatched()
    753:753:public int getDeltaX()
    758:758:public int getDeltaX(int)
    763:763:public int getDeltaY()
    768:768:public int getDeltaY(int)
    773:773:public void setCursorPosition(int,int)
    777:777:public void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int)
    785:786:public void addKeyListener(android.view.View$OnKeyListener)
com.badlogic.gdx.backends.android.AndroidInput$1
com.badlogic.gdx.backends.android.AndroidInput$2
com.badlogic.gdx.backends.android.AndroidInput$3
com.badlogic.gdx.backends.android.AndroidInput$3$1
com.badlogic.gdx.backends.android.AndroidInput$3$1$1
com.badlogic.gdx.backends.android.AndroidInput$3$2
com.badlogic.gdx.backends.android.AndroidInput$3$2$1
com.badlogic.gdx.backends.android.AndroidInput$3$3
com.badlogic.gdx.backends.android.AndroidInput$3$3$1
com.badlogic.gdx.backends.android.AndroidInput$4
com.badlogic.gdx.backends.android.AndroidInput$4$1
com.badlogic.gdx.backends.android.AndroidInput$4$1$1
com.badlogic.gdx.backends.android.AndroidInput$4$2
com.badlogic.gdx.backends.android.AndroidInput$4$2$1
com.badlogic.gdx.backends.android.AndroidInput$5
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    static final int KEY_DOWN
    static final int KEY_UP
    static final int KEY_TYPED
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    static final int TOUCH_DOWN
    static final int TOUCH_UP
    static final int TOUCH_DRAGGED
com.badlogic.gdx.backends.android.AndroidInputFactory:
    31:31:public AndroidInputFactory()
com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    38:45:public AndroidInputThreePlus(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    55:56:public void addGenericMotionListener(android.view.View$OnGenericMotionListener)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler
com.badlogic.gdx.backends.android.AndroidMusic:
    private float volume
    34:39:AndroidMusic(com.badlogic.gdx.backends.android.AndroidAudio,android.media.MediaPlayer)
    60:60:public boolean isLooping()
    92:93:public void setLooping(boolean)
    97:99:public void setVolume(float)
    103:103:public float getVolume()
    108:119:public void setPan(float,float)
    123:128:public void stop()
    132:132:public float getPosition()
    137:138:public void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.backends.android.AndroidNet:
    77:78:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    82:82:public com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    87:87:public com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    92:103:public void openURI(java.lang.String)
com.badlogic.gdx.backends.android.AndroidNet$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable
com.badlogic.gdx.backends.android.AndroidPreferences
com.badlogic.gdx.backends.android.AndroidServerSocket
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler
com.badlogic.gdx.backends.android.AndroidSocket
com.badlogic.gdx.backends.android.AndroidSound
com.badlogic.gdx.backends.android.AndroidTouchHandler:
    public abstract boolean supportsMultitouch(android.content.Context)
com.badlogic.gdx.backends.android.AndroidWallpaperListener
com.badlogic.gdx.backends.android.InputProcessorLW
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper:
    34:39:public EGLLogWrapper(javax.microedition.khronos.egl.EGL,int,java.io.Writer)
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper:
    public static final int CONFIG_CHECK_GL_ERROR
    public static final int CONFIG_CHECK_THREAD
    public static final int CONFIG_LOG_ARGUMENT_NAMES
    public static final int ERROR_WRONG_THREAD
    24:24:public GLDebugHelper()
    72:75:public static javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)
com.badlogic.gdx.backends.android.surfaceview.GLException:
    40:40:int getError()
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper:
    private static final int FORMAT_INT
    private static final int FORMAT_FLOAT
    private static final int FORMAT_FIXED
    248:264:public static java.lang.String getErrorString(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    private static final boolean DEBUG
    56:60:public GLSurfaceView20(android.content.Context,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    222:228:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    231:262:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18:
    private static final java.lang.String TAG
    private static final boolean LOG_ATTACH_DETACH
    private static final boolean LOG_THREADS
    private static final boolean LOG_PAUSE_RESUME
    private static final boolean LOG_SURFACE
    private static final boolean LOG_RENDERER
    private static final boolean LOG_RENDERER_DRAW_FRAME
    private static final boolean LOG_EGL
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    235:238:public GLSurfaceViewAPI18(android.content.Context,android.util.AttributeSet,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    594:595:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread:
    1751:1758:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager:
    private static final int kGLES_20
    private static final java.lang.String kMSM7K_RENDERER_PREFIX
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    169:172:public GLSurfaceViewCupcake(android.content.Context,android.util.AttributeSet,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    382:385:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    757:759:public int getRenderMode()
    822:825:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase:
    331:331:public void glBindFramebufferOES(int,int)
    335:335:public void glBindRenderbufferOES(int,int)
    339:339:public void glBlendEquation(int)
    343:343:public void glBlendEquationSeparate(int,int)
    347:347:public void glBlendFuncSeparate(int,int,int,int)
    351:351:int glCheckFramebufferStatusOES(int)
    355:355:public void glCompressedTexImage2D(int,int,int,int,int,int,int)
    359:359:public void glDeleteFramebuffersOES(int,int[],int)
    363:363:public void glDeleteFramebuffersOES(int,java.nio.IntBuffer)
    367:367:public void glDeleteRenderbuffersOES(int,int[],int)
    371:371:public void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)
    375:375:public void glFramebufferRenderbufferOES(int,int,int,int)
    379:379:public void glFramebufferTexture2DOES(int,int,int,int,int)
    383:383:public void glGenerateMipmapOES(int)
    387:387:public void glGenFramebuffersOES(int,int[],int)
    391:391:public void glGenFramebuffersOES(int,java.nio.IntBuffer)
    395:395:public void glGenRenderbuffersOES(int,int[],int)
    399:399:public void glGenRenderbuffersOES(int,java.nio.IntBuffer)
    403:403:public void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)
    407:407:public void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)
    411:411:public void glGetRenderbufferParameterivOES(int,int,int[],int)
    415:415:public void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)
    419:419:public void glGetTexGenfv(int,int,float[],int)
    423:423:public void glGetTexGenfv(int,int,java.nio.FloatBuffer)
    427:427:public void glGetTexGeniv(int,int,int[],int)
    431:431:public void glGetTexGeniv(int,int,java.nio.IntBuffer)
    435:435:public void glGetTexGenxv(int,int,int[],int)
    439:439:public void glGetTexGenxv(int,int,java.nio.IntBuffer)
    443:443:public boolean glIsFramebufferOES(int)
    447:447:public boolean glIsRenderbufferOES(int)
    451:451:public void glRenderbufferStorageOES(int,int,int,int)
    455:455:public void glTexGenf(int,int,float)
    459:459:public void glTexGenfv(int,int,float[],int)
    463:463:public void glTexGenfv(int,int,java.nio.FloatBuffer)
    467:467:public void glTexGeni(int,int,int)
    471:471:public void glTexGeniv(int,int,int[],int)
    475:475:public void glTexGeniv(int,int,java.nio.IntBuffer)
    479:479:public void glTexGenx(int,int,int)
    483:483:public void glTexGenxv(int,int,int[],int)
    487:487:public void glTexGenxv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    private static final int EGL_OPENGL_ES2_BIT
    public static final int EGL_COVERAGE_BUFFERS_NV
    public static final int EGL_COVERAGE_SAMPLES_NV
    private static final java.lang.String TAG
    163:169:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    172:207:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy
com.badlogic.gdx.files.FileHandle:
    58:61:public FileHandle(java.lang.String)
    66:69:public FileHandle(java.io.File)
    101:104:public java.lang.String nameWithoutExtension()
    110:113:public java.lang.String pathWithoutExtension()
    148:148:public java.io.BufferedInputStream read(int)
    154:154:public java.io.Reader reader()
    161:163:public java.io.Reader reader(java.lang.String)
    170:170:public java.io.BufferedReader reader(int)
    177:179:public java.io.BufferedReader reader(int,java.lang.String)
    186:186:public java.lang.String readString()
    192:212:public java.lang.String readString(java.lang.String)
    258:271:public int readBytes(byte[],int,int)
    279:287:public java.io.OutputStream write(boolean)
    297:313:public void write(java.io.InputStream,boolean)
    320:320:public java.io.Writer writer(boolean)
    329:341:public java.io.Writer writer(boolean,java.lang.String)
    350:351:public void writeString(java.lang.String,boolean)
    359:368:public void writeString(java.lang.String,boolean,java.lang.String)
    375:383:public void writeBytes(byte[],boolean)
    390:398:public void writeBytes(byte[],int,int,boolean)
    405:411:public com.badlogic.gdx.files.FileHandle[] list()
    419:435:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    442:443:public boolean isDirectory()
    458:459:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    475:478:public void mkdirs()
    483:490:public boolean exists()
    496:498:public boolean delete()
    504:506:public boolean deleteDirectory()
    512:513:public void emptyDirectory()
    518:521:public void emptyDirectory(boolean)
    532:546:public void copyTo(com.badlogic.gdx.files.FileHandle)
    552:557:public void moveTo(com.badlogic.gdx.files.FileHandle)
    579:579:public long lastModified()
    603:605:public static com.badlogic.gdx.files.FileHandle tempFile(java.lang.String)
    611:616:public static com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String)
    621:634:private static void emptyDirectory(java.io.File,boolean)
    637:638:private static boolean deleteDirectory(java.io.File)
    643:648:private static void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    651:661:private static void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandle$1
com.badlogic.gdx.files.FileHandleStream
com.badlogic.gdx.files.package-info
com.badlogic.gdx.graphics.Camera:
    public abstract void update()
    public abstract void update(boolean)
    78:82:public void apply(com.badlogic.gdx.graphics.GL10)
    89:91:public void lookAt(float,float,float)
    96:98:public void lookAt(com.badlogic.gdx.math.Vector3)
    103:105:public void normalizeUp()
    115:117:public void rotate(float,float,float,float)
    125:127:public void rotate(com.badlogic.gdx.math.Vector3,float)
    134:136:public void rotate(com.badlogic.gdx.math.Matrix4)
    143:145:public void rotate(com.badlogic.gdx.math.Quaternion)
    154:160:public void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
    166:168:public void transform(com.badlogic.gdx.math.Matrix4)
    175:176:public void translate(float,float,float)
    181:182:public void translate(com.badlogic.gdx.math.Vector3)
    197:205:public void unproject(com.badlogic.gdx.math.Vector3,float,float,float,float)
    215:216:public void unproject(com.badlogic.gdx.math.Vector3)
    224:225:public void project(com.badlogic.gdx.math.Vector3)
    240:244:public void project(com.badlogic.gdx.math.Vector3,float,float,float,float)
    256:259:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float)
    270:270:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
com.badlogic.gdx.graphics.Color:
    51:53:public Color(int)
    92:96:public com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color)
    104:108:public com.badlogic.gdx.graphics.Color mul(float)
    116:120:public com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
    128:132:public com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
    157:161:public com.badlogic.gdx.graphics.Color set(float,float,float,float)
    167:168:public com.badlogic.gdx.graphics.Color set(int)
    173:177:public com.badlogic.gdx.graphics.Color add(float,float,float,float)
    182:186:public com.badlogic.gdx.graphics.Color sub(float,float,float,float)
    191:195:public com.badlogic.gdx.graphics.Color mul(float,float,float,float)
    204:208:public com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float)
    220:224:public com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float)
    229:232:public com.badlogic.gdx.graphics.Color premultiplyAlpha()
    279:283:public static com.badlogic.gdx.graphics.Color valueOf(java.lang.String)
    295:297:public static float toFloatBits(int,int,int,int)
    304:305:public static float toFloatBits(float,float,float,float)
    316:316:public static int toIntBits(int,int,int,int)
    320:320:public static int alpha(float)
    324:324:public static int luminanceAlpha(float,float)
    328:328:public static int rgb565(float,float,float)
    332:332:public static int rgba4444(float,float,float,float)
    336:336:public static int rgb888(float,float,float)
    344:344:public static int rgb565(com.badlogic.gdx.graphics.Color)
    348:348:public static int rgba4444(com.badlogic.gdx.graphics.Color)
    352:352:public static int rgb888(com.badlogic.gdx.graphics.Color)
    356:356:public static int rgba8888(com.badlogic.gdx.graphics.Color)
    365:368:public static void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
    376:380:public static void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
    388:391:public static void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
    399:403:public static void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int)
    409:409:public com.badlogic.gdx.graphics.Color tmp()
    414:414:public com.badlogic.gdx.graphics.Color cpy()
com.badlogic.gdx.graphics.Cubemap
com.badlogic.gdx.graphics.Cubemap$CubemapSide
com.badlogic.gdx.graphics.FPSLogger
com.badlogic.gdx.graphics.GL10:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_OES_read_format
    public static final int GL_OES_compressed_paletted_texture
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_FOG
    public static final int GL_LIGHTING
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_ALPHA_TEST
    public static final int GL_BLEND
    public static final int GL_COLOR_LOGIC_OP
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_POINT_SMOOTH
    public static final int GL_LINE_SMOOTH
    public static final int GL_SCISSOR_TEST
    public static final int GL_COLOR_MATERIAL
    public static final int GL_NORMALIZE
    public static final int GL_RESCALE_NORMAL
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_VERTEX_ARRAY
    public static final int GL_NORMAL_ARRAY
    public static final int GL_COLOR_ARRAY
    public static final int GL_TEXTURE_COORD_ARRAY
    public static final int GL_MULTISAMPLE
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_ALPHA_TO_ONE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_STACK_OVERFLOW
    public static final int GL_STACK_UNDERFLOW
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_EXP
    public static final int GL_EXP2
    public static final int GL_FOG_DENSITY
    public static final int GL_FOG_START
    public static final int GL_FOG_END
    public static final int GL_FOG_MODE
    public static final int GL_FOG_COLOR
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_SMOOTH_POINT_SIZE_RANGE
    public static final int GL_SMOOTH_LINE_WIDTH_RANGE
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    public static final int GL_MAX_LIGHTS
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_MODELVIEW_STACK_DEPTH
    public static final int GL_MAX_PROJECTION_STACK_DEPTH
    public static final int GL_MAX_TEXTURE_STACK_DEPTH
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_PERSPECTIVE_CORRECTION_HINT
    public static final int GL_POINT_SMOOTH_HINT
    public static final int GL_LINE_SMOOTH_HINT
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_FOG_HINT
    public static final int GL_LIGHT_MODEL_AMBIENT
    public static final int GL_LIGHT_MODEL_TWO_SIDE
    public static final int GL_AMBIENT
    public static final int GL_DIFFUSE
    public static final int GL_SPECULAR
    public static final int GL_POSITION
    public static final int GL_SPOT_DIRECTION
    public static final int GL_SPOT_EXPONENT
    public static final int GL_SPOT_CUTOFF
    public static final int GL_CONSTANT_ATTENUATION
    public static final int GL_LINEAR_ATTENUATION
    public static final int GL_QUADRATIC_ATTENUATION
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_FLOAT
    public static final int GL_CLEAR
    public static final int GL_AND
    public static final int GL_AND_REVERSE
    public static final int GL_COPY
    public static final int GL_AND_INVERTED
    public static final int GL_NOOP
    public static final int GL_XOR
    public static final int GL_OR
    public static final int GL_NOR
    public static final int GL_EQUIV
    public static final int GL_INVERT
    public static final int GL_OR_REVERSE
    public static final int GL_COPY_INVERTED
    public static final int GL_OR_INVERTED
    public static final int GL_NAND
    public static final int GL_SET
    public static final int GL_EMISSION
    public static final int GL_SHININESS
    public static final int GL_AMBIENT_AND_DIFFUSE
    public static final int GL_MODELVIEW
    public static final int GL_PROJECTION
    public static final int GL_TEXTURE
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FLAT
    public static final int GL_SMOOTH
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_MODULATE
    public static final int GL_DECAL
    public static final int GL_ADD
    public static final int GL_TEXTURE_ENV_MODE
    public static final int GL_TEXTURE_ENV_COLOR
    public static final int GL_TEXTURE_ENV
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_PALETTE4_RGB8_OES
    public static final int GL_PALETTE4_RGBA8_OES
    public static final int GL_PALETTE4_R5_G6_B5_OES
    public static final int GL_PALETTE4_RGBA4_OES
    public static final int GL_PALETTE4_RGB5_A1_OES
    public static final int GL_PALETTE8_RGB8_OES
    public static final int GL_PALETTE8_RGBA8_OES
    public static final int GL_PALETTE8_R5_G6_B5_OES
    public static final int GL_PALETTE8_RGBA4_OES
    public static final int GL_PALETTE8_RGB5_A1_OES
    public static final int GL_LIGHT0
    public static final int GL_LIGHT1
    public static final int GL_LIGHT2
    public static final int GL_LIGHT3
    public static final int GL_LIGHT4
    public static final int GL_LIGHT5
    public static final int GL_LIGHT6
    public static final int GL_LIGHT7
    public static final int GL_POINT
    public static final int GL_LINE
    public static final int GL_FILL
    public abstract void glAlphaFunc(int,float)
    public abstract void glColor4f(float,float,float,float)
    public abstract void glDeleteTextures(int,int[],int)
    public abstract void glFogf(int,float)
    public abstract void glFogfv(int,float[],int)
    public abstract void glFogfv(int,java.nio.FloatBuffer)
    public abstract void glFrustumf(float,float,float,float,float,float)
    public abstract void glGenTextures(int,int[],int)
    public abstract void glGetIntegerv(int,int[],int)
    public abstract void glLightModelf(int,float)
    public abstract void glLightModelfv(int,float[],int)
    public abstract void glLightModelfv(int,java.nio.FloatBuffer)
    public abstract void glLightf(int,int,float)
    public abstract void glLightfv(int,int,float[],int)
    public abstract void glLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glLoadIdentity()
    public abstract void glLoadMatrixf(java.nio.FloatBuffer)
    public abstract void glLogicOp(int)
    public abstract void glMaterialf(int,int,float)
    public abstract void glMaterialfv(int,int,float[],int)
    public abstract void glMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glMultMatrixf(float[],int)
    public abstract void glMultMatrixf(java.nio.FloatBuffer)
    public abstract void glMultiTexCoord4f(int,float,float,float,float)
    public abstract void glNormal3f(float,float,float)
    public abstract void glOrthof(float,float,float,float,float,float)
    public abstract void glPointSize(float)
    public abstract void glPopMatrix()
    public abstract void glPushMatrix()
    public abstract void glRotatef(float,float,float,float)
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glScalef(float,float,float)
    public abstract void glShadeModel(int)
    public abstract void glTexEnvf(int,int,float)
    public abstract void glTexEnvfv(int,int,float[],int)
    public abstract void glTexEnvfv(int,int,java.nio.FloatBuffer)
    public abstract void glTranslatef(float,float,float)
    public abstract void glPolygonMode(int,int)
com.badlogic.gdx.graphics.GL11:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_VERSION_ES_CM_1_0
    public static final int GL_VERSION_ES_CL_1_0
    public static final int GL_VERSION_ES_CM_1_1
    public static final int GL_VERSION_ES_CL_1_1
    public static final int GL_CLIP_PLANE0
    public static final int GL_CLIP_PLANE1
    public static final int GL_CLIP_PLANE2
    public static final int GL_CLIP_PLANE3
    public static final int GL_CLIP_PLANE4
    public static final int GL_CLIP_PLANE5
    public static final int GL_CURRENT_COLOR
    public static final int GL_CURRENT_NORMAL
    public static final int GL_CURRENT_TEXTURE_COORDS
    public static final int GL_POINT_SIZE
    public static final int GL_POINT_SIZE_MIN
    public static final int GL_POINT_SIZE_MAX
    public static final int GL_POINT_FADE_THRESHOLD_SIZE
    public static final int GL_POINT_DISTANCE_ATTENUATION
    public static final int GL_LINE_WIDTH
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_SHADE_MODEL
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_MATRIX_MODE
    public static final int GL_VIEWPORT
    public static final int GL_MODELVIEW_STACK_DEPTH
    public static final int GL_PROJECTION_STACK_DEPTH
    public static final int GL_TEXTURE_STACK_DEPTH
    public static final int GL_MODELVIEW_MATRIX
    public static final int GL_PROJECTION_MATRIX
    public static final int GL_TEXTURE_MATRIX
    public static final int GL_ALPHA_TEST_FUNC
    public static final int GL_ALPHA_TEST_REF
    public static final int GL_BLEND_DST
    public static final int GL_BLEND_SRC
    public static final int GL_LOGIC_OP_MODE
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_MAX_CLIP_PLANES
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_VERTEX_ARRAY_SIZE
    public static final int GL_VERTEX_ARRAY_TYPE
    public static final int GL_VERTEX_ARRAY_STRIDE
    public static final int GL_NORMAL_ARRAY_TYPE
    public static final int GL_NORMAL_ARRAY_STRIDE
    public static final int GL_COLOR_ARRAY_SIZE
    public static final int GL_COLOR_ARRAY_TYPE
    public static final int GL_COLOR_ARRAY_STRIDE
    public static final int GL_TEXTURE_COORD_ARRAY_SIZE
    public static final int GL_TEXTURE_COORD_ARRAY_TYPE
    public static final int GL_TEXTURE_COORD_ARRAY_STRIDE
    public static final int GL_VERTEX_ARRAY_POINTER
    public static final int GL_NORMAL_ARRAY_POINTER
    public static final int GL_COLOR_ARRAY_POINTER
    public static final int GL_TEXTURE_COORD_ARRAY_POINTER
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_CLIENT_ACTIVE_TEXTURE
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_VERTEX_ARRAY_BUFFER_BINDING
    public static final int GL_NORMAL_ARRAY_BUFFER_BINDING
    public static final int GL_COLOR_ARRAY_BUFFER_BINDING
    public static final int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_SUBTRACT
    public static final int GL_COMBINE
    public static final int GL_COMBINE_RGB
    public static final int GL_COMBINE_ALPHA
    public static final int GL_RGB_SCALE
    public static final int GL_ADD_SIGNED
    public static final int GL_INTERPOLATE
    public static final int GL_CONSTANT
    public static final int GL_PRIMARY_COLOR
    public static final int GL_PREVIOUS
    public static final int GL_OPERAND0_RGB
    public static final int GL_OPERAND1_RGB
    public static final int GL_OPERAND2_RGB
    public static final int GL_OPERAND0_ALPHA
    public static final int GL_OPERAND1_ALPHA
    public static final int GL_OPERAND2_ALPHA
    public static final int GL_ALPHA_SCALE
    public static final int GL_SRC0_RGB
    public static final int GL_SRC1_RGB
    public static final int GL_SRC2_RGB
    public static final int GL_SRC0_ALPHA
    public static final int GL_SRC1_ALPHA
    public static final int GL_SRC2_ALPHA
    public static final int GL_DOT3_RGB
    public static final int GL_DOT3_RGBA
    public static final int GL_POINT_SIZE_ARRAY_OES
    public static final int GL_POINT_SIZE_ARRAY_TYPE_OES
    public static final int GL_POINT_SIZE_ARRAY_STRIDE_OES
    public static final int GL_POINT_SIZE_ARRAY_POINTER_OES
    public static final int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    public static final int GL_POINT_SPRITE_OES
    public static final int GL_COORD_REPLACE_OES
    public static final int GL_OES_point_size_array
    public static final int GL_OES_point_sprite
    public abstract void glClipPlanef(int,float[],int)
    public abstract void glClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetClipPlanef(int,float[],int)
    public abstract void glGetClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetFloatv(int,float[],int)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetLightfv(int,int,float[],int)
    public abstract void glGetLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetMaterialfv(int,int,float[],int)
    public abstract void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameterfv(int,int,float[],int)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glPointParameterf(int,float)
    public abstract void glPointParameterfv(int,float[],int)
    public abstract void glPointParameterfv(int,java.nio.FloatBuffer)
    public abstract void glTexParameterfv(int,int,float[],int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glColor4ub(byte,byte,byte,byte)
    public abstract void glDeleteBuffers(int,int[],int)
    public abstract void glGetBooleanv(int,boolean[],int)
    public abstract void glGetBooleanv(int,java.nio.IntBuffer)
    public abstract void glGetBufferParameteriv(int,int,int[],int)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGenBuffers(int,int[],int)
    public abstract void glGetPointerv(int,java.nio.Buffer[])
    public abstract void glGetTexEnviv(int,int,int[],int)
    public abstract void glGetTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glGetTexParameteriv(int,int,int[],int)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsTexture(int)
    public abstract void glTexEnvi(int,int,int)
    public abstract void glTexEnviv(int,int,int[],int)
    public abstract void glTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,int[],int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glPointSizePointerOES(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20:
    public static final int GL_ES_VERSION_2_0
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FUNC_ADD
    public static final int GL_BLEND_EQUATION
    public static final int GL_BLEND_EQUATION_RGB
    public static final int GL_BLEND_EQUATION_ALPHA
    public static final int GL_FUNC_SUBTRACT
    public static final int GL_FUNC_REVERSE_SUBTRACT
    public static final int GL_BLEND_DST_RGB
    public static final int GL_BLEND_SRC_RGB
    public static final int GL_BLEND_DST_ALPHA
    public static final int GL_BLEND_SRC_ALPHA
    public static final int GL_CONSTANT_COLOR
    public static final int GL_ONE_MINUS_CONSTANT_COLOR
    public static final int GL_CONSTANT_ALPHA
    public static final int GL_ONE_MINUS_CONSTANT_ALPHA
    public static final int GL_BLEND_COLOR
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_STREAM_DRAW
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_CURRENT_VERTEX_ATTRIB
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_BLEND
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_SCISSOR_TEST
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_LINE_WIDTH
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_STENCIL_BACK_FUNC
    public static final int GL_STENCIL_BACK_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS
    public static final int GL_STENCIL_BACK_REF
    public static final int GL_STENCIL_BACK_VALUE_MASK
    public static final int GL_STENCIL_BACK_WRITEMASK
    public static final int GL_VIEWPORT
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_INT
    public static final int GL_UNSIGNED_INT
    public static final int GL_FLOAT
    public static final int GL_FIXED
    public static final int GL_DEPTH_COMPONENT
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FRAGMENT_SHADER
    public static final int GL_VERTEX_SHADER
    public static final int GL_MAX_VERTEX_ATTRIBS
    public static final int GL_MAX_VERTEX_UNIFORM_VECTORS
    public static final int GL_MAX_VARYING_VECTORS
    public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS
    public static final int GL_SHADER_TYPE
    public static final int GL_DELETE_STATUS
    public static final int GL_LINK_STATUS
    public static final int GL_VALIDATE_STATUS
    public static final int GL_ATTACHED_SHADERS
    public static final int GL_ACTIVE_UNIFORMS
    public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH
    public static final int GL_ACTIVE_ATTRIBUTES
    public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    public static final int GL_SHADING_LANGUAGE_VERSION
    public static final int GL_CURRENT_PROGRAM
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_INVERT
    public static final int GL_INCR_WRAP
    public static final int GL_DECR_WRAP
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE
    public static final int GL_TEXTURE_CUBE_MAP
    public static final int GL_TEXTURE_BINDING_CUBE_MAP
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_MIRRORED_REPEAT
    public static final int GL_FLOAT_VEC2
    public static final int GL_FLOAT_VEC3
    public static final int GL_FLOAT_VEC4
    public static final int GL_INT_VEC2
    public static final int GL_INT_VEC3
    public static final int GL_INT_VEC4
    public static final int GL_BOOL
    public static final int GL_BOOL_VEC2
    public static final int GL_BOOL_VEC3
    public static final int GL_BOOL_VEC4
    public static final int GL_FLOAT_MAT2
    public static final int GL_FLOAT_MAT3
    public static final int GL_FLOAT_MAT4
    public static final int GL_SAMPLER_2D
    public static final int GL_SAMPLER_CUBE
    public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED
    public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE
    public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE
    public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE
    public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER
    public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT
    public static final int GL_COMPILE_STATUS
    public static final int GL_INFO_LOG_LENGTH
    public static final int GL_SHADER_SOURCE_LENGTH
    public static final int GL_SHADER_COMPILER
    public static final int GL_SHADER_BINARY_FORMATS
    public static final int GL_NUM_SHADER_BINARY_FORMATS
    public static final int GL_LOW_FLOAT
    public static final int GL_MEDIUM_FLOAT
    public static final int GL_HIGH_FLOAT
    public static final int GL_LOW_INT
    public static final int GL_MEDIUM_INT
    public static final int GL_HIGH_INT
    public static final int GL_FRAMEBUFFER
    public static final int GL_RENDERBUFFER
    public static final int GL_RGBA4
    public static final int GL_RGB5_A1
    public static final int GL_RGB565
    public static final int GL_DEPTH_COMPONENT16
    public static final int GL_STENCIL_INDEX
    public static final int GL_STENCIL_INDEX8
    public static final int GL_RENDERBUFFER_WIDTH
    public static final int GL_RENDERBUFFER_HEIGHT
    public static final int GL_RENDERBUFFER_INTERNAL_FORMAT
    public static final int GL_RENDERBUFFER_RED_SIZE
    public static final int GL_RENDERBUFFER_GREEN_SIZE
    public static final int GL_RENDERBUFFER_BLUE_SIZE
    public static final int GL_RENDERBUFFER_ALPHA_SIZE
    public static final int GL_RENDERBUFFER_DEPTH_SIZE
    public static final int GL_RENDERBUFFER_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    public static final int GL_COLOR_ATTACHMENT0
    public static final int GL_DEPTH_ATTACHMENT
    public static final int GL_STENCIL_ATTACHMENT
    public static final int GL_NONE
    public static final int GL_FRAMEBUFFER_COMPLETE
    public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    public static final int GL_FRAMEBUFFER_UNSUPPORTED
    public static final int GL_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_BINDING
    public static final int GL_MAX_RENDERBUFFER_SIZE
    public static final int GL_INVALID_FRAMEBUFFER_OPERATION
    public static final int GL_VERTEX_PROGRAM_POINT_SIZE
    public static final int GL_COVERAGE_BUFFER_BIT_NV
    public abstract void glBindAttribLocation(int,int,java.lang.String)
    public abstract void glBlendColor(float,float,float,float)
    public abstract void glBlendEquation(int)
    public abstract void glBlendEquationSeparate(int,int)
    public abstract void glBlendFuncSeparate(int,int,int,int)
    public abstract void glDetachShader(int,int)
    public abstract void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public abstract void glGetBooleanv(int,java.nio.Buffer)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetUniformiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsFramebuffer(int)
    public abstract boolean glIsProgram(int)
    public abstract boolean glIsRenderbuffer(int)
    public abstract boolean glIsShader(int)
    public abstract boolean glIsTexture(int)
    public abstract void glReleaseShaderCompiler()
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public abstract void glStencilFuncSeparate(int,int,int,int)
    public abstract void glStencilMaskSeparate(int,int)
    public abstract void glStencilOpSeparate(int,int,int,int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1f(int,float)
    public abstract void glUniform1fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform1iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform2f(int,float,float)
    public abstract void glUniform2fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform2i(int,int,int)
    public abstract void glUniform2iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3f(int,float,float,float)
    public abstract void glUniform3fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform3i(int,int,int,int)
    public abstract void glUniform3iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4f(int,float,float,float,float)
    public abstract void glUniform4fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform4i(int,int,int,int,int)
    public abstract void glUniform4iv(int,int,java.nio.IntBuffer)
    public abstract void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glValidateProgram(int)
    public abstract void glVertexAttrib1f(int,float)
    public abstract void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib2f(int,float,float)
    public abstract void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib3f(int,float,float,float)
    public abstract void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib4f(int,float,float,float,float)
    public abstract void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GLCommon:
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT
    public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    public abstract void glActiveTexture(int)
    public abstract void glClear(int)
    public abstract void glClearColor(float,float,float,float)
    public abstract void glClearDepthf(float)
    public abstract void glClearStencil(int)
    public abstract void glColorMask(boolean,boolean,boolean,boolean)
    public abstract void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCullFace(int)
    public abstract void glDepthFunc(int)
    public abstract void glDepthRangef(float,float)
    public abstract void glFinish()
    public abstract void glFlush()
    public abstract void glFrontFace(int)
    public abstract int glGetError()
    public abstract void glHint(int,int)
    public abstract void glLineWidth(float)
    public abstract void glPolygonOffset(float,float)
    public abstract void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glScissor(int,int,int,int)
    public abstract void glStencilFunc(int,int,int)
    public abstract void glStencilMask(int)
    public abstract void glStencilOp(int,int,int)
    public abstract void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glViewport(int,int,int,int)
com.badlogic.gdx.graphics.GLTexture:
    public abstract int getWidth()
    public abstract int getHeight()
    public abstract int getDepth()
    62:63:public GLTexture(int)
    public abstract boolean isManaged()
    protected abstract void reload()
    85:87:public void bind(int)
    118:119:public void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
    126:134:public void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap,boolean)
    152:153:public void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter)
    162:170:public void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    204:205:public static void setEnforcePotImages(boolean)
    208:208:public static boolean getEnforcePotImage()
    220:220:protected static com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.Mesh:
    93:105:public varargs Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttribute[])
    114:126:public Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    141:166:public Mesh(boolean,boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    203:227:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[])
    238:238:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[])
    251:292:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[])
    300:302:public com.badlogic.gdx.graphics.Mesh setVertices(float[])
    320:321:public void getVertices(float[])
    327:328:public void getVertices(int,float[])
    335:336:public void getVertices(int,int,float[])
    345:359:public void getVertices(int,int,float[],int)
    378:380:public com.badlogic.gdx.graphics.Mesh setIndices(short[],int,int)
    386:387:public void getIndices(short[])
    393:400:public void getIndices(short[],int)
    404:404:public int getNumIndices()
    409:409:public int getNumVertices()
    414:414:public int getMaxVertices()
    419:419:public int getMaxIndices()
    424:424:public int getVertexSize()
    434:435:public void setAutoBind(boolean)
    506:507:public void render(int)
    587:588:public void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int)
    682:687:public com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int)
    692:692:public com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes()
    697:697:public java.nio.FloatBuffer getVerticesBuffer()
    705:707:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
    715:745:public void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    753:753:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    762:762:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
    771:771:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    781:821:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
    873:908:public void scale(float,float,float)
    916:917:public void transform(com.badlogic.gdx.math.Matrix4)
    921:933:protected void transform(com.badlogic.gdx.math.Matrix4,int,int)
    946:980:public static void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int)
    988:989:public void transformUV(com.badlogic.gdx.math.Matrix3)
    993:1004:protected void transformUV(com.badlogic.gdx.math.Matrix3,int,int)
    1016:1028:public static void transformUV(com.badlogic.gdx.math.Matrix3,float[],int,int,int,int)
    1040:1123:public com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[])
    1131:1131:public com.badlogic.gdx.graphics.Mesh copy(boolean)
com.badlogic.gdx.graphics.OrthographicCamera:
    40:45:public OrthographicCamera(float,float)
    73:74:public void setToOrtho(boolean)
    98:99:public void rotate(float)
    105:106:public void translate(float,float)
    111:112:public void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.PerspectiveCamera
com.badlogic.gdx.graphics.Pixmap:
    106:107:public static void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter)
    123:129:public Pixmap(byte[],int,int)
    146:148:public Pixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap)
    153:154:public void setColor(int)
    169:170:public void setColor(com.badlogic.gdx.graphics.Color)
    191:192:public void drawLine(int,int,int,int)
    202:203:public void drawRectangle(int,int,int,int)
    211:212:public void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int)
    253:254:public void fillRectangle(int,int,int,int)
    262:263:public void drawCircle(int,int,int)
    271:272:public void fillCircle(int,int,int)
    283:284:public void fillTriangle(int,int,int,int,int,int)
    292:292:public int getPixel(int,int)
    317:318:public void drawPixel(int,int)
    326:327:public void drawPixel(int,int,int)
com.badlogic.gdx.graphics.Pixmap$Filter
com.badlogic.gdx.graphics.PixmapIO:
    36:147:public PixmapIO()
    42:43:public static void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
    56:60:public static void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM:
    private static final int BUFFER_SIZE
    63:63:private PixmapIO$CIM()
    69:105:public static void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG
com.badlogic.gdx.graphics.Texture:
    100:101:public Texture(java.lang.String)
    116:117:public Texture(com.badlogic.gdx.graphics.Pixmap)
    120:121:public Texture(com.badlogic.gdx.graphics.Pixmap,boolean)
    124:125:public Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
    168:173:public void draw(com.badlogic.gdx.graphics.Pixmap,int,int)
    187:187:public int getDepth()
    288:289:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    304:304:public static int getNumManagedTextures()
com.badlogic.gdx.graphics.Texture$TextureFilter:
    75:75:public boolean isMipMap()
com.badlogic.gdx.graphics.VertexAttribute:
    68:68:public static com.badlogic.gdx.graphics.VertexAttribute Position()
    72:72:public static com.badlogic.gdx.graphics.VertexAttribute TexCoords(int)
    76:76:public static com.badlogic.gdx.graphics.VertexAttribute Normal()
    80:80:public static com.badlogic.gdx.graphics.VertexAttribute Color()
    84:84:public static com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked()
    88:88:public static com.badlogic.gdx.graphics.VertexAttribute Tangent()
    92:92:public static com.badlogic.gdx.graphics.VertexAttribute Binormal()
    96:96:public static com.badlogic.gdx.graphics.VertexAttribute BoneWeight(int)
    114:114:public int getKey()
com.badlogic.gdx.graphics.VertexAttributes:
    65:67:public int getOffset(int)
    73:76:public com.badlogic.gdx.graphics.VertexAttribute findByUsage(int)
    167:174:public long getMask()
com.badlogic.gdx.graphics.VertexAttributes$Usage
com.badlogic.gdx.graphics.g2d.Animation:
    public static final int NORMAL
    public static final int REVERSED
    public static final int LOOP
    public static final int LOOP_REVERSED
    public static final int LOOP_PINGPONG
    public static final int LOOP_RANDOM
    46:55:public Animation(float,com.badlogic.gdx.utils.Array)
    62:72:public Animation(float,com.badlogic.gdx.utils.Array,int)
    167:167:public int getPlayMode()
    174:175:public void setPlayMode(int)
    181:182:public boolean isAnimationFinished(float)
com.badlogic.gdx.graphics.g2d.BitmapFont:
    private static final int LOG2_PAGE_SIZE
    private static final int PAGE_SIZE
    private static final int PAGES
    83:85:public BitmapFont(boolean)
    97:98:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion)
    107:108:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
    113:114:public BitmapFont(com.badlogic.gdx.files.FileHandle)
    120:121:public BitmapFont(com.badlogic.gdx.files.FileHandle,boolean)
    127:128:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    277:280:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,int,int)
    286:289:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float)
    296:299:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    306:309:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float)
    317:320:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    326:326:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence)
    332:332:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    338:338:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int)
    346:367:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    373:373:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence)
    379:392:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    398:398:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float)
    405:446:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    454:492:public void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray)
    498:514:public int computeVisibleGlyphs(java.lang.CharSequence,int,int,float)
    518:519:public void setColor(float)
    526:527:public void setColor(float,float,float,float)
    532:532:public com.badlogic.gdx.graphics.Color getColor()
    560:561:public void scale(float)
    564:564:public float getScaleX()
    568:568:public float getScaleY()
    578:578:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
    592:592:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int)
    597:597:public float getLineHeight()
    602:602:public float getSpaceWidth()
    607:607:public float getXHeight()
    613:613:public float getCapHeight()
    618:618:public float getAscent()
    624:624:public float getDescent()
    629:629:public boolean isFlipped()
    643:656:public void setFixedWidthGlyphs(java.lang.CharSequence)
    660:660:public boolean containsCharacter(char)
    665:667:public void setUseIntegerPositions(boolean)
    679:679:public com.badlogic.gdx.graphics.g2d.BitmapFontCache getCache()
    683:683:public com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData()
    688:688:public boolean ownsTexture()
    695:696:public void setOwnsTexture(boolean)
    728:731:static int indexOf(java.lang.CharSequence,char,int)
    735:742:static boolean isWhitespace(char)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    1008:1008:public java.lang.String getImagePath()
    1017:1017:public java.lang.String getImagePath(int)
    1021:1021:public java.lang.String[] getImagePaths()
    1025:1025:public com.badlogic.gdx.files.FileHandle getFontFile()
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    753:755:public BitmapFont$TextBounds(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    758:760:public void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    89:90:public void setPosition(float,float)
    96:111:public void translate(float,float)
    114:121:public void setColor(float)
    135:144:public void setColor(float,float,float,float)
    149:179:public void setColor(com.badlogic.gdx.graphics.Color,int,int)
    192:234:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,int,int)
    237:248:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    251:258:public com.badlogic.gdx.graphics.Color getColor()
    419:420:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float)
    426:427:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int)
    433:433:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float)
    453:454:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float)
    460:461:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    467:467:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float)
    477:505:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    512:513:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float)
    520:521:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    527:527:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float)
    536:591:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    597:597:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds()
    602:602:public float getX()
    607:607:public float getY()
    611:611:public com.badlogic.gdx.graphics.g2d.BitmapFont getFont()
    622:622:public boolean usesIntegerPositions()
    626:626:public float[] getVertices()
    630:630:public float[] getVertices(int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    public static final int GDX2D_FORMAT_ALPHA
    public static final int GDX2D_FORMAT_LUMINANCE_ALPHA
    public static final int GDX2D_FORMAT_RGB888
    public static final int GDX2D_FORMAT_RGBA8888
    public static final int GDX2D_FORMAT_RGB565
    public static final int GDX2D_FORMAT_RGBA4444
    public static final int GDX2D_SCALE_NEAREST
    public static final int GDX2D_SCALE_LINEAR
    public static final int GDX2D_BLEND_NONE
    public static final int GDX2D_BLEND_SRC_OVER
    65:82:public Gdx2DPixmap(java.io.InputStream,int)
    95:101:public Gdx2DPixmap(java.nio.ByteBuffer,long[])
    112:113:public void setPixel(int,int,int)
    116:116:public int getPixel(int,int)
    120:121:public void drawLine(int,int,int,int,int)
    124:125:public void drawRect(int,int,int,int,int)
    128:129:public void drawCircle(int,int,int,int)
    132:133:public void fillRect(int,int,int,int,int)
    136:137:public void fillCircle(int,int,int,int)
    140:141:public void fillTriangle(int,int,int,int,int,int,int)
    154:156:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
    162:164:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
    222:236:public java.lang.String getFormatString()
    private static native void setPixel(long,int,int,int)
    private static native int getPixel(long,int,int)
    private static native void drawLine(long,int,int,int,int,int)
    private static native void drawRect(long,int,int,int,int,int)
    private static native void drawCircle(long,int,int,int,int)
    private static native void fillRect(long,int,int,int,int,int)
    private static native void fillCircle(long,int,int,int,int)
    private static native void fillTriangle(long,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch
com.badlogic.gdx.graphics.g2d.ParticleEffect
com.badlogic.gdx.graphics.g2d.ParticleEffectPool
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect
com.badlogic.gdx.graphics.g2d.ParticleEmitter
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D
com.badlogic.gdx.graphics.g2d.PixmapPacker
com.badlogic.gdx.graphics.g2d.PixmapPacker$1
com.badlogic.gdx.graphics.g2d.PixmapPacker$2
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page
com.badlogic.gdx.graphics.g2d.PolygonRegion
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader
com.badlogic.gdx.graphics.g2d.PolygonSprite
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch
com.badlogic.gdx.graphics.g2d.Sprite
com.badlogic.gdx.graphics.g2d.SpriteBatch:
    public static final int X1
    public static final int Y1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int C4
    public static final int U4
    public static final int V4
    102:103:public SpriteBatch(int)
    108:109:public SpriteBatch(int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
    114:115:public SpriteBatch(int,int)
    245:246:public void setColor(com.badlogic.gdx.graphics.Color)
    250:252:public void setColor(float,float,float,float)
    257:258:public void setColor(float)
    262:268:public com.badlogic.gdx.graphics.Color getColor()
    293:419:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    436:490:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    501:543:public void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    553:591:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float)
    716:717:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    897:1028:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    1082:1086:public void setBlendFunction(int,int)
    1089:1089:public int getBlendSrcFunc()
    1093:1093:public int getBlendDstFunc()
    1105:1105:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    1110:1110:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    1124:1127:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    1167:1182:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteCache
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache
com.badlogic.gdx.graphics.g2d.TextureAtlas:
    private final com.badlogic.gdx.utils.Array regions
    195:196:public TextureAtlas()
    201:202:public TextureAtlas(java.lang.String)
    206:207:public TextureAtlas(com.badlogic.gdx.files.FileHandle)
    212:213:public TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
    216:217:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    221:222:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    225:227:public TextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
    230:263:private void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
    267:274:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int)
    279:279:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion)
    285:285:public com.badlogic.gdx.utils.Array getRegions()
    292:294:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String)
    301:307:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
    313:318:public com.badlogic.gdx.utils.Array findRegions(java.lang.String)
    325:328:public com.badlogic.gdx.utils.Array createSprites()
    336:338:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String)
    346:352:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
    360:365:public com.badlogic.gdx.utils.Array createSprites(java.lang.String)
    369:378:private com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    386:396:public com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String)
    401:401:public java.util.Set getTextures()
    423:426:static java.lang.String readValue(java.io.BufferedReader)
    431:445:static int readTuple(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    public int index
    public java.lang.String name
    public int packedWidth
    public int originalWidth
    public boolean rotate
    public int[] splits
    public int[] pads
    490:495:public TextureAtlas$AtlasRegion(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    497:509:public TextureAtlas$AtlasRegion(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    513:516:public void flip(boolean,boolean)
    521:521:public float getRotatedPackedWidth()
    527:527:public float getRotatedPackedHeight()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    final com.badlogic.gdx.utils.Array pages
    final com.badlogic.gdx.utils.Array regions
    98:183:public TextureAtlas$TextureAtlasData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    186:186:public com.badlogic.gdx.utils.Array getPages()
    190:190:public com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    public com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page
    public java.lang.String name
    public float offsetX
    public float offsetY
    public int originalWidth
    public int originalHeight
    public boolean rotate
    public int left
    public int top
    public int width
    public int height
    public boolean flip
    public int[] splits
    public int[] pads
com.badlogic.gdx.graphics.g2d.TextureRegion:
    44:47:public TextureRegion(com.badlogic.gdx.graphics.Texture,int,int)
    56:59:public TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    62:64:public TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    69:71:public TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    75:77:public void setRegion(com.badlogic.gdx.graphics.Texture)
    112:114:public void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    118:120:public void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    127:128:public void setTexture(com.badlogic.gdx.graphics.Texture)
    131:131:public float getU()
    135:137:public void setU(float)
    140:140:public float getV()
    144:146:public void setV(float)
    149:149:public float getU2()
    153:155:public void setU2(float)
    158:158:public float getV2()
    162:164:public void setV2(float)
    171:172:public void setRegionX(int)
    179:180:public void setRegionY(int)
    188:189:public void setRegionWidth(int)
    197:198:public void setRegionHeight(int)
    201:211:public void flip(boolean,boolean)
    214:214:public boolean isFlipX()
    218:218:public boolean isFlipY()
    226:236:public void scroll(float,float)
com.badlogic.gdx.graphics.g3d.Attribute
com.badlogic.gdx.graphics.g3d.Attributes
com.badlogic.gdx.graphics.g3d.Environment
com.badlogic.gdx.graphics.g3d.Material
com.badlogic.gdx.graphics.g3d.Model
com.badlogic.gdx.graphics.g3d.ModelBatch
com.badlogic.gdx.graphics.g3d.ModelBatch$1
com.badlogic.gdx.graphics.g3d.ModelInstance
com.badlogic.gdx.graphics.g3d.Renderable
com.badlogic.gdx.graphics.g3d.RenderableProvider
com.badlogic.gdx.graphics.g3d.Shader
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2
com.badlogic.gdx.graphics.g3d.decals.Decal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.GroupPlug
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap
com.badlogic.gdx.graphics.g3d.environment.BaseLight
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight
com.badlogic.gdx.graphics.g3d.environment.PointLight
com.badlogic.gdx.graphics.g3d.environment.ShadowMap
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader
com.badlogic.gdx.graphics.g3d.loader.MtlLoader
com.badlogic.gdx.graphics.g3d.loader.ObjLoader
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters
com.badlogic.gdx.graphics.g3d.model.Animation
com.badlogic.gdx.graphics.g3d.model.MeshPart
com.badlogic.gdx.graphics.g3d.model.Node
com.badlogic.gdx.graphics.g3d.model.NodeAnimation
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe
com.badlogic.gdx.graphics.g3d.model.NodePart
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation
com.badlogic.gdx.graphics.g3d.model.data.ModelData
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart
com.badlogic.gdx.graphics.g3d.model.data.ModelNode
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture
com.badlogic.gdx.graphics.g3d.shaders.BaseShader
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones
com.badlogic.gdx.graphics.g3d.shaders.DepthShader
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config
com.badlogic.gdx.graphics.g3d.shaders.GLES10Shader
com.badlogic.gdx.graphics.g3d.utils.AnimationController
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider
com.badlogic.gdx.graphics.g3d.utils.CameraInputController
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController
com.badlogic.gdx.graphics.g3d.utils.GLES10ShaderProvider
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder
com.badlogic.gdx.graphics.g3d.utils.RenderContext
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider
com.badlogic.gdx.graphics.g3d.utils.TextureBinder
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor
com.badlogic.gdx.graphics.g3d.utils.TextureProvider
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider
com.badlogic.gdx.graphics.glutils.ETC1:
    38:45:public ETC1()
    152:155:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
    163:166:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
    public static native int getCompressedDataSize(int,int)
    public static native void formatHeader(java.nio.ByteBuffer,int,int,int)
    private static native java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
    private static native java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    55:61:public ETC1$ETC1Data(int,int,java.nio.ByteBuffer,int)
    103:124:public void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    38:39:public ETC1TextureData(com.badlogic.gdx.files.FileHandle)
    46:49:public ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.FileTextureData:
    128:128:public com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer
com.badlogic.gdx.graphics.glutils.FloatTextureData
com.badlogic.gdx.graphics.glutils.FrameBuffer:
    92:100:public FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    211:213:public void begin()
    217:219:public void end()
    223:223:public com.badlogic.gdx.graphics.Texture getColorBufferTexture()
    228:228:public int getHeight()
    233:233:public int getWidth()
    237:241:private static void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20
com.badlogic.gdx.graphics.glutils.IndexArray:
    48:48:public int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    84:93:public IndexBufferObject(int)
    114:114:public int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    84:93:public IndexBufferObjectSubData(int)
    120:120:public int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexData:
    public abstract int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    31:33:private MipMapGenerator()
    38:39:public static void setUseHardwareMipMap(boolean)
    45:46:public static void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram:
    public static final java.lang.String POSITION_ATTRIBUTE
    public static final java.lang.String NORMAL_ATTRIBUTE
    public static final java.lang.String COLOR_ATTRIBUTE
    public static final java.lang.String TEXCOORD_ATTRIBUTE
    public static final java.lang.String TANGENT_ATTRIBUTE
    public static final java.lang.String BINORMAL_ATTRIBUTE
    170:171:public ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    312:315:public void setUniformi(int,int)
    324:328:public void setUniformi(java.lang.String,int,int)
    331:334:public void setUniformi(int,int,int)
    344:348:public void setUniformi(java.lang.String,int,int,int)
    351:354:public void setUniformi(int,int,int,int)
    365:369:public void setUniformi(java.lang.String,int,int,int,int)
    372:375:public void setUniformi(int,int,int,int,int)
    383:387:public void setUniformf(java.lang.String,float)
    390:393:public void setUniformf(int,float)
    402:406:public void setUniformf(java.lang.String,float,float)
    409:412:public void setUniformf(int,float,float)
    422:426:public void setUniformf(java.lang.String,float,float,float)
    429:432:public void setUniformf(int,float,float,float)
    443:447:public void setUniformf(java.lang.String,float,float,float,float)
    450:453:public void setUniformf(int,float,float,float,float)
    456:463:public void setUniform1fv(java.lang.String,float[],int,int)
    466:472:public void setUniform1fv(int,float[],int,int)
    475:482:public void setUniform2fv(java.lang.String,float[],int,int)
    485:491:public void setUniform2fv(int,float[],int,int)
    494:501:public void setUniform3fv(java.lang.String,float[],int,int)
    504:510:public void setUniform3fv(int,float[],int,int)
    513:520:public void setUniform4fv(java.lang.String,float[],int,int)
    523:529:public void setUniform4fv(int,float[],int,int)
    556:557:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4)
    560:565:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean)
    573:574:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
    583:590:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
    593:594:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3)
    597:603:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean)
    612:617:public void setUniformMatrix3fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    626:631:public void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    634:640:public void setUniformMatrix4fv(int,float[],int,int)
    643:650:public void setUniformMatrix4fv(java.lang.String,float[],int,int)
    658:659:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
    662:663:public void setUniformf(int,com.badlogic.gdx.math.Vector2)
    671:672:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
    675:676:public void setUniformf(int,com.badlogic.gdx.math.Vector3)
    684:685:public void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
    688:689:public void setUniformf(int,com.badlogic.gdx.graphics.Color)
    702:707:public void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer)
    726:731:public void setVertexAttribute(java.lang.String,int,int,boolean,int,int)
    785:790:public void enableVertexAttribute(java.lang.String)
    850:853:public void setAttributef(java.lang.String,float,float,float,float)
    856:861:private void ensureBufferCapacity(int)
    909:909:public boolean hasAttribute(java.lang.String)
    915:915:public int getAttributeType(java.lang.String)
    927:927:public int getAttributeSize(java.lang.String)
    933:933:public boolean hasUniform(java.lang.String)
    939:939:public int getUniformType(java.lang.String)
    945:945:public int getUniformLocation(java.lang.String)
    951:951:public int getUniformSize(java.lang.String)
    956:956:public java.lang.String[] getAttributes()
    961:961:public java.lang.String[] getUniforms()
    968:968:public java.lang.String getVertexShaderSource()
    975:975:public java.lang.String getFragmentShaderSource()
com.badlogic.gdx.graphics.glutils.ShapeRenderer
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType
com.badlogic.gdx.graphics.glutils.VertexArray:
    77:77:public java.nio.FloatBuffer getBuffer()
    83:83:public int getNumVertices()
    88:88:public int getNumMaxVertices()
    182:183:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    231:232:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    254:254:public com.badlogic.gdx.graphics.VertexAttributes getAttributes()
com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    104:104:public com.badlogic.gdx.graphics.VertexAttributes getAttributes()
    110:110:public int getNumVertices()
    115:115:public int getNumMaxVertices()
    121:122:public java.nio.FloatBuffer getBuffer()
    203:204:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    290:291:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    112:112:public com.badlogic.gdx.graphics.VertexAttributes getAttributes()
    118:118:public int getNumVertices()
    123:123:public int getNumMaxVertices()
    129:130:public java.nio.FloatBuffer getBuffer()
    221:222:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    308:309:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    332:334:public void invalidate()
    361:361:public int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexData:
    public abstract int getNumVertices()
    public abstract int getNumMaxVertices()
    public abstract com.badlogic.gdx.graphics.VertexAttributes getAttributes()
    public abstract java.nio.FloatBuffer getBuffer()
    public abstract void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    public abstract void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.input.GestureDetector:
    229:231:public void cancel()
    235:235:public boolean isLongPressed()
    241:242:public boolean isLongPressed(float)
    246:246:public boolean isPanning()
    250:253:public void reset()
    261:262:public void invalidateTapSquare()
    265:266:public void setTapSquareSize(int)
    270:271:public void setTapCountInterval(float)
    274:275:public void setLongPressSeconds(float)
    278:279:public void setMaxFlingDelay(long)
com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    443:449:private float getSum(float[],int)
com.badlogic.gdx.input.RemoteInput
com.badlogic.gdx.input.RemoteInput$EventTrigger
com.badlogic.gdx.input.RemoteInput$KeyEvent
com.badlogic.gdx.input.RemoteInput$RemoteInputListener
com.badlogic.gdx.input.RemoteInput$TouchEvent
com.badlogic.gdx.input.RemoteSender
com.badlogic.gdx.jnigen.AndroidNdkScriptGenerator
com.badlogic.gdx.jnigen.AntPathMatcher
com.badlogic.gdx.jnigen.AntScriptGenerator
com.badlogic.gdx.jnigen.BuildConfig
com.badlogic.gdx.jnigen.BuildExecutor
com.badlogic.gdx.jnigen.BuildExecutor$1
com.badlogic.gdx.jnigen.BuildTarget
com.badlogic.gdx.jnigen.BuildTarget$TargetOs
com.badlogic.gdx.jnigen.FileDescriptor
com.badlogic.gdx.jnigen.FileDescriptor$FileType
com.badlogic.gdx.jnigen.JniGenSharedLibraryLoader
com.badlogic.gdx.jnigen.NativeCodeGenerator
com.badlogic.gdx.jnigen.parsing.CMethodParser
com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethod
com.badlogic.gdx.jnigen.parsing.CMethodParser$CMethodParserResult
com.badlogic.gdx.jnigen.parsing.JavaMethodParser
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$Argument
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$ArgumentType
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaMethod
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JavaSegment
com.badlogic.gdx.jnigen.parsing.JavaMethodParser$JniSection
com.badlogic.gdx.jnigen.parsing.JniHeaderCMethodParser
com.badlogic.gdx.jnigen.parsing.RobustJavaMethodParser
com.badlogic.gdx.jnigen.parsing.RobustJavaMethodParser$1
com.badlogic.gdx.jnigen.test.MyJniClass
com.badlogic.gdx.maps.ImageResolver
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver
com.badlogic.gdx.maps.Map
com.badlogic.gdx.maps.MapLayer
com.badlogic.gdx.maps.MapLayers
com.badlogic.gdx.maps.MapObject
com.badlogic.gdx.maps.MapObjects
com.badlogic.gdx.maps.MapProperties
com.badlogic.gdx.maps.MapRenderer
com.badlogic.gdx.maps.objects.CircleMapObject
com.badlogic.gdx.maps.objects.EllipseMapObject
com.badlogic.gdx.maps.objects.PolygonMapObject
com.badlogic.gdx.maps.objects.PolylineMapObject
com.badlogic.gdx.maps.objects.RectangleMapObject
com.badlogic.gdx.maps.objects.TextureMapObject
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters
com.badlogic.gdx.maps.tiled.TideMapLoader
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters
com.badlogic.gdx.maps.tiled.TiledMap
com.badlogic.gdx.maps.tiled.TiledMapRenderer
com.badlogic.gdx.maps.tiled.TiledMapTile
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode
com.badlogic.gdx.maps.tiled.TiledMapTileLayer
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell
com.badlogic.gdx.maps.tiled.TiledMapTileSet
com.badlogic.gdx.maps.tiled.TiledMapTileSets
com.badlogic.gdx.maps.tiled.TmxMapLoader
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile
com.badlogic.gdx.math.BSpline
com.badlogic.gdx.math.Bezier
com.badlogic.gdx.math.Bresenham2
com.badlogic.gdx.math.Bresenham2$1
com.badlogic.gdx.math.CatmullRomSpline
com.badlogic.gdx.math.Circle
com.badlogic.gdx.math.ConvexHull
com.badlogic.gdx.math.DelaunayTriangulator
com.badlogic.gdx.math.EarClippingTriangulator
com.badlogic.gdx.math.Ellipse
com.badlogic.gdx.math.FloatCounter
com.badlogic.gdx.math.Frustum:
    84:88:public boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
    97:100:public boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
    109:112:public boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
    120:132:public boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.GeometryUtils
com.badlogic.gdx.math.GridPoint2
com.badlogic.gdx.math.GridPoint3
com.badlogic.gdx.math.Interpolation
com.badlogic.gdx.math.Interpolation$1
com.badlogic.gdx.math.Interpolation$2
com.badlogic.gdx.math.Interpolation$3
com.badlogic.gdx.math.Interpolation$4
com.badlogic.gdx.math.Interpolation$5
com.badlogic.gdx.math.Interpolation$6
com.badlogic.gdx.math.Interpolation$7
com.badlogic.gdx.math.Interpolation$8
com.badlogic.gdx.math.Interpolation$Bounce
com.badlogic.gdx.math.Interpolation$BounceIn
com.badlogic.gdx.math.Interpolation$BounceOut
com.badlogic.gdx.math.Interpolation$Elastic
com.badlogic.gdx.math.Interpolation$ElasticIn
com.badlogic.gdx.math.Interpolation$ElasticOut
com.badlogic.gdx.math.Interpolation$Exp
com.badlogic.gdx.math.Interpolation$ExpIn
com.badlogic.gdx.math.Interpolation$ExpOut
com.badlogic.gdx.math.Interpolation$Pow
com.badlogic.gdx.math.Interpolation$PowIn
com.badlogic.gdx.math.Interpolation$PowOut
com.badlogic.gdx.math.Interpolation$Swing
com.badlogic.gdx.math.Interpolation$SwingIn
com.badlogic.gdx.math.Interpolation$SwingOut
com.badlogic.gdx.math.Intersector:
    32:1236:public Intersector()
    46:58:public static boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    63:68:public static boolean isPointInTriangle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    73:78:public static boolean isPointInTriangle(float,float,float,float,float,float,float,float)
    82:88:public static boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    95:95:public static int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    101:101:public static int pointLineSide(float,float,float,float,float,float)
    110:121:public static boolean isPointInPolygon(com.badlogic.gdx.utils.Array,com.badlogic.gdx.math.Vector2)
    126:137:public static boolean isPointInPolygon(float[],int,int,float,float)
    148:165:public static float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    170:171:public static float distanceLinePoint(float,float,float,float,float,float)
    176:176:public static float distanceSegmentPoint(float,float,float,float,float,float)
    181:181:public static float distanceSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    186:191:public static com.badlogic.gdx.math.Vector2 nearestSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    197:204:public static com.badlogic.gdx.math.Vector2 nearestSegmentPoint(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2)
    214:230:public static boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
    244:255:public static float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2)
    266:277:public static boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    292:304:public static float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    319:342:public static boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    358:398:public static boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3)
    409:495:public static boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3)
    506:542:public static boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox)
    559:583:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3)
    596:624:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3)
    635:657:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3)
    670:678:public static boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    686:692:public static boolean intersectLines(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2)
    701:720:public static boolean intersectLinePolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon)
    729:736:public static boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    744:763:public static boolean intersectSegmentPolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon)
    775:787:public static boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    791:791:static float det(float,float,float,float)
    795:795:static double detd(double,double,double,double)
    799:799:public static boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle)
    803:803:public static boolean overlaps(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    807:827:public static boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle)
    1027:1122:public static void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)
    1127:1137:private static void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)
    1140:1181:public static void main(java.lang.String[])
com.badlogic.gdx.math.Intersector$MinimumTranslationVector:
    1236:1238:public Intersector$MinimumTranslationVector()
com.badlogic.gdx.math.Intersector$SplitTriangle
com.badlogic.gdx.math.MathUtils:
    public static final float nanoToSec
    public static final float PI
    public static final float PI2
    private static final int SIN_BITS
    private static final int SIN_MASK
    private static final int SIN_COUNT
    private static final float radFull
    private static final float degFull
    private static final float radToIndex
    private static final float degToIndex
    public static final float radiansToDegrees
    public static final float radDeg
    public static final float degreesToRadians
    public static final float degRad
    private static final int ATAN2_BITS
    private static final int ATAN2_BITS2
    private static final int ATAN2_MASK
    private static final int ATAN2_COUNT
    private static final int BIG_ENOUGH_INT
    private static final double BIG_ENOUGH_FLOOR
    private static final double CEIL
    private static final double BIG_ENOUGH_CEIL
    private static final double BIG_ENOUGH_ROUND
    27:88:public MathUtils()
    61:61:public static final float sin(float)
    66:66:public static final float cos(float)
    104:126:public static final float atan2(float,float)
    140:140:public static final int random(int,int)
    145:145:public static final boolean randomBoolean()
    150:150:public static final boolean randomBoolean(float)
    155:155:public static final float random()
    160:160:public static final float random(float)
    165:165:public static final float random(float,float)
    189:191:public static int clamp(int,int,int)
    195:197:public static short clamp(short,short,short)
    201:203:public static float clamp(float,float,float)
    219:219:public static int floor(float)
    225:225:public static int floorPositive(float)
    231:231:public static int ceil(float)
    237:237:public static int ceilPositive(float)
    243:243:public static int round(float)
    248:248:public static int roundPositive(float)
com.badlogic.gdx.math.MathUtils$Atan2
com.badlogic.gdx.math.MathUtils$Sin:
    49:49:private MathUtils$Sin()
com.badlogic.gdx.math.Matrix3
com.badlogic.gdx.math.Matrix4:
    private static final long serialVersionUID
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M03
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M13
    public static final int M20
    public static final int M21
    public static final int M22
    public static final int M23
    public static final int M30
    public static final int M31
    public static final int M32
    public static final int M33
    62:64:public Matrix4(com.badlogic.gdx.math.Matrix4)
    70:72:public Matrix4(float[])
    76:78:public Matrix4(com.badlogic.gdx.math.Quaternion)
    84:86:public Matrix4(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
    112:112:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion)
    123:149:public com.badlogic.gdx.math.Matrix4 set(float,float,float,float)
    158:183:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
    194:210:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    215:215:public com.badlogic.gdx.math.Matrix4 cpy()
    223:226:public com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
    236:239:public com.badlogic.gdx.math.Matrix4 trn(float,float,float)
    244:244:public float[] getValues()
    264:280:public com.badlogic.gdx.math.Matrix4 tra()
    311:370:public com.badlogic.gdx.math.Matrix4 inv()
    375:375:public float det()
    394:415:public com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float)
    442:443:public com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
    492:495:public com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3)
    519:523:public com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float)
    533:540:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    555:562:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
    573:577:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float)
    588:592:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float)
    600:600:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    612:612:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float)
    621:622:public com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
    630:634:public com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
    644:648:public com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
    702:707:public com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    721:723:public com.badlogic.gdx.math.Matrix4 lerp(com.badlogic.gdx.math.Matrix4,float)
    729:745:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3)
    749:752:public com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
    756:759:public com.badlogic.gdx.math.Matrix4 scl(float,float,float)
    763:766:public com.badlogic.gdx.math.Matrix4 scl(float)
    770:773:public com.badlogic.gdx.math.Vector3 getTranslation(com.badlogic.gdx.math.Vector3)
    777:777:public com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion)
    781:784:public com.badlogic.gdx.math.Vector3 getScale(com.badlogic.gdx.math.Vector3)
    789:792:public com.badlogic.gdx.math.Matrix4 toNormalMatrix()
    public static native void mulVec(float[],float[])
    public static native void mulVec(float[],float[],int,int,int)
    public static native void prj(float[],float[])
    public static native void rot(float[],float[])
    public static native void rot(float[],float[],int,int,int)
    public static native float det(float[])
    1055:1055:public com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3)
    1065:1083:public com.badlogic.gdx.math.Matrix4 translate(float,float,float)
    1093:1095:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
    1106:1108:public com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float)
    1117:1119:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion)
    1127:1127:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    1137:1155:public com.badlogic.gdx.math.Matrix4 scale(float,float,float)
com.badlogic.gdx.math.Path
com.badlogic.gdx.math.Plane:
    private static final long serialVersionUID
    51:54:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    62:64:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    87:89:public void set(float,float,float,float)
    96:96:public float distance(com.badlogic.gdx.math.Vector3)
    105:112:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
    123:130:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
    139:140:public boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
    145:145:public com.badlogic.gdx.math.Vector3 getNormal()
    150:150:public float getD()
    158:160:public void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    163:165:public void set(float,float,float,float,float,float)
    171:173:public void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Plane$PlaneSide
com.badlogic.gdx.math.Polygon:
    private com.badlogic.gdx.math.Rectangle bounds
    48:48:public float[] getVertices()
    99:102:public void setOrigin(float,float)
    117:128:public void setVertices(float[])
    132:135:public void translate(float,float)
    145:147:public void rotate(float)
    151:154:public void setScale(float,float)
    158:161:public void scale(float)
    165:166:public void dirty()
    170:186:public float area()
    195:216:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    221:232:public boolean contains(float,float)
    237:237:public float getX()
    242:242:public float getY()
    247:247:public float getOriginX()
    252:252:public float getOriginY()
    257:257:public float getRotation()
    262:262:public float getScaleX()
    267:267:public float getScaleY()
com.badlogic.gdx.math.Polyline
com.badlogic.gdx.math.Quaternion:
    private static final long serialVersionUID
    private static final float NORMALIZATION_TOLERANCE
    54:56:public Quaternion(com.badlogic.gdx.math.Quaternion)
    62:64:public Quaternion(com.badlogic.gdx.math.Vector3,float)
    84:84:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion)
    93:93:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float)
    98:98:public com.badlogic.gdx.math.Quaternion cpy()
    103:103:public float len()
    117:138:public com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
    143:143:public float len2()
    149:157:public com.badlogic.gdx.math.Quaternion nor()
    164:167:public com.badlogic.gdx.math.Quaternion conjugate()
    175:182:public com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3)
    190:198:public com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
    206:214:public com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
    223:249:public void toMatrix(float[])
    264:264:public com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
    274:281:public com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float)
    291:291:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
    317:354:public com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
    362:364:public com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    376:378:public com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float)
    387:418:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
    437:437:public float dot(com.badlogic.gdx.math.Quaternion)
    444:448:public com.badlogic.gdx.math.Quaternion mul(float)
    458:473:public float getAxisAngle(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Rectangle
com.badlogic.gdx.math.Vector
com.badlogic.gdx.math.Vector2:
    private static final long serialVersionUID
    51:53:public Vector2(com.badlogic.gdx.math.Vector2)
    57:57:public com.badlogic.gdx.math.Vector2 cpy()
    62:62:public float len()
    67:67:public float len2()
    93:95:public com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2)
    101:106:public com.badlogic.gdx.math.Vector2 nor()
    113:115:public com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2)
    123:125:public com.badlogic.gdx.math.Vector2 add(float,float)
    131:131:public float dot(com.badlogic.gdx.math.Vector2)
    138:140:public com.badlogic.gdx.math.Vector2 scl(float)
    145:145:public com.badlogic.gdx.math.Vector2 mul(float)
    151:153:public com.badlogic.gdx.math.Vector2 scl(float,float)
    158:158:public com.badlogic.gdx.math.Vector2 mul(float,float)
    164:166:public com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2)
    171:171:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2)
    175:175:public com.badlogic.gdx.math.Vector2 div(float)
    179:179:public com.badlogic.gdx.math.Vector2 div(float,float)
    183:183:public com.badlogic.gdx.math.Vector2 div(com.badlogic.gdx.math.Vector2)
    198:200:public float dst(float,float)
    206:208:public float dst2(com.badlogic.gdx.math.Vector2)
    215:217:public float dst2(float,float)
    224:228:public com.badlogic.gdx.math.Vector2 limit(float)
    236:243:public com.badlogic.gdx.math.Vector2 clamp(float,float)
    255:257:public com.badlogic.gdx.math.Vector2 sub(float,float)
    264:268:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
    275:275:public float crs(com.badlogic.gdx.math.Vector2)
    283:283:public float crs(float,float)
    289:291:public float angle()
    297:300:public com.badlogic.gdx.math.Vector2 setAngle(float)
    306:316:public com.badlogic.gdx.math.Vector2 rotate(float)
    326:329:public com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
    357:360:public boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
    369:371:public boolean epsilonEquals(float,float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.Vector3:
    private static final long serialVersionUID
    69:71:public Vector3(com.badlogic.gdx.math.Vector3)
    76:78:public Vector3(float[])
    84:86:public Vector3(com.badlogic.gdx.math.Vector2,float)
    114:114:public com.badlogic.gdx.math.Vector3 set(float[])
    123:123:public com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector2,float)
    128:128:public com.badlogic.gdx.math.Vector3 cpy()
    155:155:com.badlogic.gdx.math.Vector3 tmp3()
    180:180:public com.badlogic.gdx.math.Vector3 add(float)
    205:205:public com.badlogic.gdx.math.Vector3 sub(float)
    217:217:public com.badlogic.gdx.math.Vector3 mul(float)
    224:224:public com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3)
    229:229:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Vector3)
    238:238:public com.badlogic.gdx.math.Vector3 scl(float,float,float)
    243:243:public com.badlogic.gdx.math.Vector3 mul(float,float,float)
    248:248:public com.badlogic.gdx.math.Vector3 scale(float,float,float)
    256:256:public com.badlogic.gdx.math.Vector3 div(float)
    262:262:public com.badlogic.gdx.math.Vector3 div(float,float,float)
    268:268:public com.badlogic.gdx.math.Vector3 div(com.badlogic.gdx.math.Vector3)
    273:273:public static float len(float,float,float)
    278:278:public float len()
    283:283:public static float len2(float,float,float)
    294:294:public boolean idt(com.badlogic.gdx.math.Vector3)
    299:302:public static float dst(float,float,float,float,float,float)
    308:311:public float dst(com.badlogic.gdx.math.Vector3)
    316:319:public float dst(float,float,float)
    324:327:public static float dst2(float,float,float,float,float,float)
    334:337:public float dst2(com.badlogic.gdx.math.Vector3)
    346:349:public float dst2(float,float,float)
    363:363:public static float dot(float,float,float,float,float,float)
    378:378:public float dot(float,float,float)
    394:394:public com.badlogic.gdx.math.Vector3 crs(float,float,float)
    401:402:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4)
    410:410:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion)
    419:421:public com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4)
    431:432:public com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
    444:444:public com.badlogic.gdx.math.Vector3 rotate(float,float,float,float)
    453:454:public com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float)
    459:459:public boolean isUnit()
    464:464:public boolean isUnit(float)
    469:469:public boolean isZero()
    474:474:public boolean isZero(float)
    484:486:public com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
    496:513:public com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
    524:526:public com.badlogic.gdx.math.Vector3 limit(float)
    534:541:public com.badlogic.gdx.math.Vector3 clamp(float,float)
    571:575:public boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
    581:584:public boolean epsilonEquals(float,float,float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.WindowedMean:
    83:83:public float getOldest()
    88:88:public float getLatest()
    93:101:public float standardDeviation()
com.badlogic.gdx.math.collision.BoundingBox
com.badlogic.gdx.math.collision.Ray:
    private static final long serialVersionUID
    43:43:public com.badlogic.gdx.math.collision.Ray cpy()
    51:51:public com.badlogic.gdx.math.Vector3 getEndPoint(float)
    59:59:public com.badlogic.gdx.math.Vector3 getEndPoint(com.badlogic.gdx.math.Vector3,float)
    69:73:public com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
    87:89:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    102:104:public com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
    112:114:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Segment
com.badlogic.gdx.math.collision.Sphere
com.badlogic.gdx.net.HttpParametersUtils
com.badlogic.gdx.net.HttpStatus
com.badlogic.gdx.net.NetJavaImpl:
    132:209:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
com.badlogic.gdx.net.NetJavaImpl$1
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse
com.badlogic.gdx.net.NetJavaImpl$OptimizedByteArrayOutputStream
com.badlogic.gdx.net.ServerSocket
com.badlogic.gdx.net.ServerSocketHints
com.badlogic.gdx.net.Socket
com.badlogic.gdx.net.SocketHints
com.badlogic.gdx.physics.box2d.Body
com.badlogic.gdx.physics.box2d.BodyDef
com.badlogic.gdx.physics.box2d.BodyDef$BodyType
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer
com.badlogic.gdx.physics.box2d.ChainShape
com.badlogic.gdx.physics.box2d.CircleShape
com.badlogic.gdx.physics.box2d.Contact
com.badlogic.gdx.physics.box2d.ContactFilter
com.badlogic.gdx.physics.box2d.ContactImpulse
com.badlogic.gdx.physics.box2d.ContactListener
com.badlogic.gdx.physics.box2d.DestructionListener
com.badlogic.gdx.physics.box2d.EdgeShape
com.badlogic.gdx.physics.box2d.Filter
com.badlogic.gdx.physics.box2d.Fixture
com.badlogic.gdx.physics.box2d.FixtureDef
com.badlogic.gdx.physics.box2d.Joint
com.badlogic.gdx.physics.box2d.JointDef
com.badlogic.gdx.physics.box2d.JointDef$JointType
com.badlogic.gdx.physics.box2d.JointEdge
com.badlogic.gdx.physics.box2d.Manifold
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType
com.badlogic.gdx.physics.box2d.MassData
com.badlogic.gdx.physics.box2d.PolygonShape
com.badlogic.gdx.physics.box2d.QueryCallback
com.badlogic.gdx.physics.box2d.RayCastCallback
com.badlogic.gdx.physics.box2d.Shape
com.badlogic.gdx.physics.box2d.Shape$Type
com.badlogic.gdx.physics.box2d.Transform
com.badlogic.gdx.physics.box2d.World
com.badlogic.gdx.physics.box2d.World$1
com.badlogic.gdx.physics.box2d.World$2
com.badlogic.gdx.physics.box2d.WorldManifold
com.badlogic.gdx.physics.box2d.joints.DistanceJoint
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef
com.badlogic.gdx.physics.box2d.joints.FrictionJoint
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef
com.badlogic.gdx.physics.box2d.joints.GearJoint
com.badlogic.gdx.physics.box2d.joints.GearJointDef
com.badlogic.gdx.physics.box2d.joints.MouseJoint
com.badlogic.gdx.physics.box2d.joints.MouseJointDef
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef
com.badlogic.gdx.physics.box2d.joints.PulleyJoint
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef
com.badlogic.gdx.physics.box2d.joints.RopeJoint
com.badlogic.gdx.physics.box2d.joints.RopeJointDef
com.badlogic.gdx.physics.box2d.joints.WeldJoint
com.badlogic.gdx.physics.box2d.joints.WeldJointDef
com.badlogic.gdx.physics.box2d.joints.WheelJoint
com.badlogic.gdx.physics.box2d.joints.WheelJointDef
com.badlogic.gdx.scenes.scene2d.Action
com.badlogic.gdx.scenes.scene2d.Actor
com.badlogic.gdx.scenes.scene2d.Event
com.badlogic.gdx.scenes.scene2d.EventListener
com.badlogic.gdx.scenes.scene2d.Group
com.badlogic.gdx.scenes.scene2d.InputEvent
com.badlogic.gdx.scenes.scene2d.InputEvent$Type
com.badlogic.gdx.scenes.scene2d.InputListener
com.badlogic.gdx.scenes.scene2d.InputListener$1
com.badlogic.gdx.scenes.scene2d.Stage
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus
com.badlogic.gdx.scenes.scene2d.Touchable
com.badlogic.gdx.scenes.scene2d.actions.Actions
com.badlogic.gdx.scenes.scene2d.actions.AddAction
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction
com.badlogic.gdx.scenes.scene2d.actions.AfterAction
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction
com.badlogic.gdx.scenes.scene2d.actions.ColorAction
com.badlogic.gdx.scenes.scene2d.actions.DelayAction
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction
com.badlogic.gdx.scenes.scene2d.actions.FloatAction
com.badlogic.gdx.scenes.scene2d.actions.IntAction
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction
com.badlogic.gdx.scenes.scene2d.ui.Button
com.badlogic.gdx.scenes.scene2d.ui.Button$1
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup
com.badlogic.gdx.scenes.scene2d.ui.CheckBox
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.Dialog
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup
com.badlogic.gdx.scenes.scene2d.ui.Image
com.badlogic.gdx.scenes.scene2d.ui.ImageButton
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.Label
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle
com.badlogic.gdx.scenes.scene2d.ui.List
com.badlogic.gdx.scenes.scene2d.ui.List$1
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$2
com.badlogic.gdx.scenes.scene2d.ui.Skin
com.badlogic.gdx.scenes.scene2d.ui.Skin$1
com.badlogic.gdx.scenes.scene2d.ui.Skin$2
com.badlogic.gdx.scenes.scene2d.ui.Skin$3
com.badlogic.gdx.scenes.scene2d.ui.Skin$4
com.badlogic.gdx.scenes.scene2d.ui.Skin$5
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable
com.badlogic.gdx.scenes.scene2d.ui.Slider
com.badlogic.gdx.scenes.scene2d.ui.Slider$1
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle
com.badlogic.gdx.scenes.scene2d.ui.SplitPane
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.Stack
com.badlogic.gdx.scenes.scene2d.ui.Table
com.badlogic.gdx.scenes.scene2d.ui.TableLayout
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$1
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect
com.badlogic.gdx.scenes.scene2d.ui.TextButton
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.TextField
com.badlogic.gdx.scenes.scene2d.ui.TextField$1
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle
com.badlogic.gdx.scenes.scene2d.ui.Touchpad
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle
com.badlogic.gdx.scenes.scene2d.ui.Tree
com.badlogic.gdx.scenes.scene2d.ui.Tree$1
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup
com.badlogic.gdx.scenes.scene2d.ui.Widget
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup
com.badlogic.gdx.scenes.scene2d.ui.Window
com.badlogic.gdx.scenes.scene2d.ui.Window$1
com.badlogic.gdx.scenes.scene2d.ui.Window$2
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2
com.badlogic.gdx.scenes.scene2d.utils.Align
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent
com.badlogic.gdx.scenes.scene2d.utils.ClickListener
com.badlogic.gdx.scenes.scene2d.utils.Cullable
com.badlogic.gdx.scenes.scene2d.utils.Disableable
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target
com.badlogic.gdx.scenes.scene2d.utils.DragListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2
com.badlogic.gdx.scenes.scene2d.utils.Drawable
com.badlogic.gdx.scenes.scene2d.utils.FocusListener
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.Layout
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable
com.badlogic.gdx.utils.Array:
    private com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable
    69:70:public Array(java.lang.Class)
    85:86:public Array(java.lang.Object[])
    93:96:public Array(boolean,java.lang.Object[],int,int)
    115:116:public void addAll(java.lang.Object[])
    132:134:public void set(int,java.lang.Object)
    137:146:public void insert(int,java.lang.Object)
    149:155:public void swap(int,int)
    177:185:public int indexOf(java.lang.Object,boolean)
    193:201:public int lastIndexOf(java.lang.Object,boolean)
    245:271:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    285:286:public java.lang.Object peek()
    291:292:public java.lang.Object first()
    305:307:public void shrink()
    313:315:public java.lang.Object[] ensureCapacity(int)
    330:331:public void sort()
    335:336:public void sort(java.util.Comparator)
    345:348:public java.lang.Object selectRanked(java.util.Comparator,int)
    357:360:public int selectRankedIndex(java.util.Comparator,int)
    364:371:public void reverse()
    374:381:public void shuffle()
    394:398:public java.lang.Iterable select(com.badlogic.gdx.utils.Predicate)
    404:408:public void truncate(int)
    412:413:public java.lang.Object random()
    419:419:public java.lang.Object[] toArray()
    423:425:public java.lang.Object[] toArray(java.lang.Class)
    459:467:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.Array$ArrayIterator:
    477:478:public Array$ArrayIterator(com.badlogic.gdx.utils.Array)
    502:503:public void reset()
com.badlogic.gdx.utils.ArrayMap
com.badlogic.gdx.utils.ArrayMap$Entries
com.badlogic.gdx.utils.ArrayMap$Keys
com.badlogic.gdx.utils.ArrayMap$Values
com.badlogic.gdx.utils.AtomicQueue
com.badlogic.gdx.utils.Base64Coder
com.badlogic.gdx.utils.BaseJsonReader
com.badlogic.gdx.utils.BinaryHeap
com.badlogic.gdx.utils.BinaryHeap$Node
com.badlogic.gdx.utils.Bits
com.badlogic.gdx.utils.BooleanArray
com.badlogic.gdx.utils.BufferUtils:
    32:32:public BufferUtils()
    65:67:public static void copy(byte[],int,java.nio.Buffer,int)
    79:81:public static void copy(short[],int,java.nio.Buffer,int)
    93:95:public static void copy(char[],int,java.nio.Buffer,int)
    107:109:public static void copy(int[],int,java.nio.Buffer,int)
    121:123:public static void copy(long[],int,java.nio.Buffer,int)
    135:137:public static void copy(float[],int,java.nio.Buffer,int)
    149:151:public static void copy(double[],int,java.nio.Buffer,int)
    163:166:public static void copy(java.nio.Buffer,java.nio.Buffer,int)
    169:184:private static int positionInBytes(java.nio.Buffer)
    188:203:private static int bytesToElements(java.nio.Buffer,int)
    207:222:private static int elementsToBytes(java.nio.Buffer,int)
    232:234:public static java.nio.DoubleBuffer newDoubleBuffer(int)
    244:246:public static java.nio.ShortBuffer newShortBuffer(int)
    250:252:public static java.nio.CharBuffer newCharBuffer(int)
    262:264:public static java.nio.LongBuffer newLongBuffer(int)
    303:303:public static long getUnsafeBufferAddress(java.nio.Buffer)
    314:318:public static java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
    325:325:public static int getAllocatedBytesUnsafe()
    private static native long getBufferAddress(java.nio.Buffer)
    public static native void clear(java.nio.ByteBuffer,int)
    private static native void copyJni(byte[],int,java.nio.Buffer,int,int)
    private static native void copyJni(char[],int,java.nio.Buffer,int,int)
    private static native void copyJni(short[],int,java.nio.Buffer,int,int)
    private static native void copyJni(int[],int,java.nio.Buffer,int,int)
    private static native void copyJni(long[],int,java.nio.Buffer,int,int)
    private static native void copyJni(float[],int,java.nio.Buffer,int,int)
    private static native void copyJni(double[],int,java.nio.Buffer,int,int)
    private static native void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.CharArray
com.badlogic.gdx.utils.Clipboard
com.badlogic.gdx.utils.ComparableTimSort
com.badlogic.gdx.utils.DataInput
com.badlogic.gdx.utils.DataOutput
com.badlogic.gdx.utils.DelayedRemovalArray
com.badlogic.gdx.utils.FloatArray
com.badlogic.gdx.utils.GdxBuild
com.badlogic.gdx.utils.GdxNativesLoader:
    19:19:public GdxNativesLoader()
com.badlogic.gdx.utils.GdxRuntimeException:
    private static final long serialVersionUID
com.badlogic.gdx.utils.IdentityMap
com.badlogic.gdx.utils.IdentityMap$Entries
com.badlogic.gdx.utils.IdentityMap$Entry
com.badlogic.gdx.utils.IdentityMap$Keys
com.badlogic.gdx.utils.IdentityMap$MapIterator
com.badlogic.gdx.utils.IdentityMap$Values
com.badlogic.gdx.utils.IntArray:
    38:39:public IntArray(int)
    52:57:public IntArray(com.badlogic.gdx.utils.IntArray)
    62:63:public IntArray(int[])
    70:73:public IntArray(boolean,int[],int,int)
    82:83:public void addAll(com.badlogic.gdx.utils.IntArray)
    86:89:public void addAll(com.badlogic.gdx.utils.IntArray,int,int)
    92:93:public void addAll(int[])
    96:101:public void addAll(int[],int,int)
    104:105:public int get(int)
    109:111:public void set(int,int)
    114:116:public void incr(int,int)
    119:128:public void insert(int,int)
    131:137:public void swap(int,int)
    140:144:public boolean contains(int)
    148:151:public int indexOf(int)
    155:158:public int lastIndexOf(int)
    162:169:public boolean removeValue(int)
    174:182:public int removeIndex(int)
    188:201:public boolean removeAll(com.badlogic.gdx.utils.IntArray)
    206:206:public int pop()
    211:211:public int peek()
    216:217:public int first()
    227:229:public void shrink()
    249:250:public void sort()
    253:260:public void reverse()
    263:270:public void shuffle()
    275:276:public void truncate(int)
    280:281:public int random()
    285:287:public int[] toArray()
    316:324:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.IntFloatMap
com.badlogic.gdx.utils.IntFloatMap$Entries
com.badlogic.gdx.utils.IntFloatMap$Entry
com.badlogic.gdx.utils.IntFloatMap$Keys
com.badlogic.gdx.utils.IntFloatMap$MapIterator
com.badlogic.gdx.utils.IntFloatMap$Values
com.badlogic.gdx.utils.IntIntMap
com.badlogic.gdx.utils.IntIntMap$Entries
com.badlogic.gdx.utils.IntIntMap$Entry
com.badlogic.gdx.utils.IntIntMap$Keys
com.badlogic.gdx.utils.IntIntMap$MapIterator
com.badlogic.gdx.utils.IntIntMap$Values
com.badlogic.gdx.utils.IntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntMap$Entries entries1
    private com.badlogic.gdx.utils.IntMap$Entries entries2
    private com.badlogic.gdx.utils.IntMap$Values values1
    private com.badlogic.gdx.utils.IntMap$Values values2
    private com.badlogic.gdx.utils.IntMap$Keys keys1
    private com.badlogic.gdx.utils.IntMap$Keys keys2
    57:58:public IntMap()
    63:64:public IntMap(int)
    68:84:public IntMap(int,float)
    160:162:public void putAll(com.badlogic.gdx.utils.IntMap)
    289:301:public java.lang.Object get(int)
    305:317:public java.lang.Object get(int,java.lang.Object)
    321:324:private java.lang.Object getStash(int,java.lang.Object)
    395:400:public void shrink(int)
    404:412:public void clear(int)
    415:425:public void clear()
    432:447:public boolean containsValue(java.lang.Object,boolean)
    451:460:public boolean containsKey(int)
    464:467:private boolean containsKeyStash(int)
    475:490:public int findKey(java.lang.Object,boolean,int)
    496:498:public void ensureCapacity(int)
    572:585:public com.badlogic.gdx.utils.IntMap$Entries entries()
    591:604:public com.badlogic.gdx.utils.IntMap$Values values()
    610:623:public com.badlogic.gdx.utils.IntMap$Keys keys()
com.badlogic.gdx.utils.IntMap$Entries
com.badlogic.gdx.utils.IntMap$Entry
com.badlogic.gdx.utils.IntMap$Keys
com.badlogic.gdx.utils.IntMap$MapIterator
com.badlogic.gdx.utils.IntMap$Values
com.badlogic.gdx.utils.IntSet
com.badlogic.gdx.utils.IntSet$Entry
com.badlogic.gdx.utils.IntSet$IntSetIterator
com.badlogic.gdx.utils.Json
com.badlogic.gdx.utils.Json$FieldMetadata
com.badlogic.gdx.utils.Json$ReadOnlySerializer
com.badlogic.gdx.utils.Json$Serializable
com.badlogic.gdx.utils.Json$Serializer
com.badlogic.gdx.utils.JsonReader
com.badlogic.gdx.utils.JsonValue
com.badlogic.gdx.utils.JsonValue$1
com.badlogic.gdx.utils.JsonValue$JsonIterator
com.badlogic.gdx.utils.JsonValue$ValueType
com.badlogic.gdx.utils.JsonWriter
com.badlogic.gdx.utils.JsonWriter$1
com.badlogic.gdx.utils.JsonWriter$JsonObject
com.badlogic.gdx.utils.JsonWriter$OutputType
com.badlogic.gdx.utils.LittleEndianInputStream
com.badlogic.gdx.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    36:37:public Logger(java.lang.String)
    39:42:public Logger(java.lang.String,int)
    49:50:public void debug(java.lang.String,java.lang.Exception)
    57:58:public void info(java.lang.String,java.lang.Exception)
    61:62:public void error(java.lang.String)
    72:73:public void setLevel(int)
com.badlogic.gdx.utils.LongArray
com.badlogic.gdx.utils.LongMap
com.badlogic.gdx.utils.LongMap$Entries
com.badlogic.gdx.utils.LongMap$Entry
com.badlogic.gdx.utils.LongMap$Keys
com.badlogic.gdx.utils.LongMap$MapIterator
com.badlogic.gdx.utils.LongMap$Values
com.badlogic.gdx.utils.NumberUtils:
    19:19:public NumberUtils()
    29:29:public static int floatToRawIntBits(float)
    33:33:public static int floatToIntColor(float)
    43:43:public static float intBitsToFloat(int)
    47:47:public static long doubleToLongBits(double)
    51:51:public static double longBitsToDouble(long)
com.badlogic.gdx.utils.ObjectFloatMap
com.badlogic.gdx.utils.ObjectFloatMap$Entries
com.badlogic.gdx.utils.ObjectFloatMap$Entry
com.badlogic.gdx.utils.ObjectFloatMap$Keys
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator
com.badlogic.gdx.utils.ObjectFloatMap$Values
com.badlogic.gdx.utils.ObjectIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries1
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries2
    private com.badlogic.gdx.utils.ObjectIntMap$Values values1
    private com.badlogic.gdx.utils.ObjectIntMap$Values values2
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys1
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys2
    60:61:public ObjectIntMap(int)
    144:146:public void putAll(com.badlogic.gdx.utils.ObjectIntMap)
    291:302:public int getAndIncrement(java.lang.Object,int,int)
    306:314:private int getAndIncrementStash(java.lang.Object,int,int)
    318:343:public int remove(java.lang.Object,int)
    347:356:int removeStash(java.lang.Object,int)
    361:367:void removeStashIndex(int)
    372:377:public void shrink(int)
    381:387:public void clear(int)
    400:403:public boolean containsValue(int)
    407:416:public boolean containsKey(java.lang.Object)
    420:423:private boolean containsKeyStash(java.lang.Object)
    429:432:public java.lang.Object findKey(int)
    438:440:public void ensureCapacity(int)
    509:522:public com.badlogic.gdx.utils.ObjectIntMap$Entries entries()
    528:541:public com.badlogic.gdx.utils.ObjectIntMap$Values values()
    547:560:public com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Entries
com.badlogic.gdx.utils.ObjectIntMap$Entry
com.badlogic.gdx.utils.ObjectIntMap$Keys
com.badlogic.gdx.utils.ObjectIntMap$MapIterator
com.badlogic.gdx.utils.ObjectIntMap$Values
com.badlogic.gdx.utils.ObjectMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectMap$Values values1
    private com.badlogic.gdx.utils.ObjectMap$Values values2
    60:61:public ObjectMap(int)
    154:157:public void putAll(com.badlogic.gdx.utils.ObjectMap)
    300:309:public java.lang.Object get(java.lang.Object,java.lang.Object)
    313:316:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    379:384:public void shrink(int)
    388:394:public void clear(int)
    412:424:public boolean containsValue(java.lang.Object,boolean)
    452:464:public java.lang.Object findKey(java.lang.Object,boolean)
    470:472:public void ensureCapacity(int)
    560:573:public com.badlogic.gdx.utils.ObjectMap$Values values()
com.badlogic.gdx.utils.ObjectMap$Values
com.badlogic.gdx.utils.ObjectSet
com.badlogic.gdx.utils.ObjectSet$SetIterator
com.badlogic.gdx.utils.OrderedMap
com.badlogic.gdx.utils.OrderedMap$1
com.badlogic.gdx.utils.OrderedMap$2
com.badlogic.gdx.utils.OrderedMap$3
com.badlogic.gdx.utils.PauseableThread
com.badlogic.gdx.utils.PerformanceCounter
com.badlogic.gdx.utils.PerformanceCounters
com.badlogic.gdx.utils.Pool:
    31:32:public Pool()
    36:37:public Pool(int)
    40:43:public Pool(int,int)
    67:75:public void freeAll(com.badlogic.gdx.utils.Array)
    79:80:public void clear()
    84:84:public int getFree()
com.badlogic.gdx.utils.PooledLinkedList
com.badlogic.gdx.utils.PooledLinkedList$1
com.badlogic.gdx.utils.PooledLinkedList$Item
com.badlogic.gdx.utils.Pools
com.badlogic.gdx.utils.Predicate
com.badlogic.gdx.utils.Predicate$PredicateIterable
com.badlogic.gdx.utils.Predicate$PredicateIterator
com.badlogic.gdx.utils.QuickSelect
com.badlogic.gdx.utils.ReflectionPool
com.badlogic.gdx.utils.Scaling
com.badlogic.gdx.utils.Scaling$1
com.badlogic.gdx.utils.ScreenUtils
com.badlogic.gdx.utils.Select
com.badlogic.gdx.utils.SerializationException
com.badlogic.gdx.utils.SharedLibraryLoader:
    66:68:public SharedLibraryLoader(java.lang.String)
    141:150:public java.io.File extractFile(java.lang.String,java.lang.String)
    157:179:private java.io.File getExtractedFile(java.lang.String,java.lang.String)
    184:193:private boolean canWrite(java.io.File)
com.badlogic.gdx.utils.ShortArray
com.badlogic.gdx.utils.SnapshotArray
com.badlogic.gdx.utils.Sort
com.badlogic.gdx.utils.SortedIntList
com.badlogic.gdx.utils.SortedIntList$Iterator
com.badlogic.gdx.utils.SortedIntList$Node
com.badlogic.gdx.utils.SortedIntList$NodePool
com.badlogic.gdx.utils.StreamUtils:
    31:31:public StreamUtils()
    37:38:public static void copyStream(java.io.InputStream,java.io.OutputStream)
    43:48:public static void copyStream(java.io.InputStream,java.io.OutputStream,int)
com.badlogic.gdx.utils.StringBuilder:
    static final int INITIAL_CAPACITY
    39:39:final char[] getValue()
    67:68:public StringBuilder(java.lang.CharSequence)
    70:74:public StringBuilder(com.badlogic.gdx.utils.StringBuilder)
    81:85:public StringBuilder(java.lang.String)
    106:112:final void append0(char[])
    116:129:final void append0(char[],int,int)
    169:169:public int capacity()
    185:199:final void delete0(int,int)
    203:211:final void deleteCharAt0(int)
    220:224:public void ensureCapacity(int)
    236:240:public void getChars(int,int,char[],int)
    243:251:final void insert0(int,char[])
    254:266:final void insert0(int,char[],int,int)
    270:277:final void insert0(int,char)
    280:293:final void insert0(int,java.lang.String)
    296:303:final void insert0(int,java.lang.CharSequence,int,int)
    313:324:private void move(int,int)
    327:353:final void replace0(int,int,java.lang.String)
    357:411:final void reverse0()
    419:423:public void setCharAt(int,char)
    432:443:public void setLength(int)
    451:459:public java.lang.String substring(int)
    510:510:public int indexOf(java.lang.String)
    522:553:public int indexOf(java.lang.String,int)
    565:565:public int lastIndexOf(java.lang.String)
    578:610:public int lastIndexOf(java.lang.String,int)
    618:623:public void trimToSize()
    634:637:public int codePointAt(int)
    649:652:public int codePointBefore(int)
    666:669:public int codePointCount(int,int)
    683:683:public int offsetByCodePoints(int,int)
    693:694:public com.badlogic.gdx.utils.StringBuilder append(boolean)
    744:773:public com.badlogic.gdx.utils.StringBuilder append(long)
    782:783:public com.badlogic.gdx.utils.StringBuilder append(float)
    793:794:public com.badlogic.gdx.utils.StringBuilder append(double)
    828:829:public com.badlogic.gdx.utils.StringBuilder append(char[])
    842:843:public com.badlogic.gdx.utils.StringBuilder append(char[],int,int)
    861:865:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder)
    883:887:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
    897:898:public com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
    909:910:public com.badlogic.gdx.utils.StringBuilder delete(int,int)
    920:921:public com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
    933:934:public com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
    946:947:public com.badlogic.gdx.utils.StringBuilder insert(int,char)
    959:960:public com.badlogic.gdx.utils.StringBuilder insert(int,int)
    972:973:public com.badlogic.gdx.utils.StringBuilder insert(int,long)
    985:986:public com.badlogic.gdx.utils.StringBuilder insert(int,float)
    998:999:public com.badlogic.gdx.utils.StringBuilder insert(int,double)
    1011:1012:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
    1023:1024:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
    1036:1037:public com.badlogic.gdx.utils.StringBuilder insert(int,char[])
    1052:1053:public com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
    1066:1067:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
    1083:1084:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
    1097:1098:public com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
    1105:1106:public com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.TimSort
com.badlogic.gdx.utils.TimeUtils:
    21:21:public TimeUtils()
    29:29:public static long millis()
com.badlogic.gdx.utils.Timer:
    private static final int CANCELLED
    private static final int FOREVER
    47:48:public void postTask(com.badlogic.gdx.utils.Timer$Task)
    57:58:public void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float)
    74:77:public void stop()
    91:96:public void clear()
    146:147:public static void post(com.badlogic.gdx.utils.Timer$Task)
    158:159:public static void schedule(com.badlogic.gdx.utils.Timer$Task,float,float)
    164:165:public static void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int)
com.badlogic.gdx.utils.Timer$Task:
    public abstract void run()
com.badlogic.gdx.utils.UBJsonReader
com.badlogic.gdx.utils.XmlReader
com.badlogic.gdx.utils.XmlReader$Element
com.badlogic.gdx.utils.XmlWriter
com.badlogic.gdx.utils.async.AsyncExecutor:
    44:53:public AsyncExecutor(int)
com.badlogic.gdx.utils.async.AsyncExecutor$1
com.badlogic.gdx.utils.async.ThreadUtils:
    24:24:public ThreadUtils()
com.badlogic.gdx.utils.compression.CRC
com.badlogic.gdx.utils.compression.ICodeProgress
com.badlogic.gdx.utils.compression.Lzma
com.badlogic.gdx.utils.compression.Lzma$CommandLine
com.badlogic.gdx.utils.compression.lz.BinTree
com.badlogic.gdx.utils.compression.lz.InWindow
com.badlogic.gdx.utils.compression.lz.OutWindow
com.badlogic.gdx.utils.compression.lzma.Base
com.badlogic.gdx.utils.compression.lzma.Decoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2
com.badlogic.gdx.utils.compression.lzma.Encoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder
com.badlogic.gdx.utils.compression.rangecoder.Decoder
com.badlogic.gdx.utils.compression.rangecoder.Encoder
com.badlogic.gdx.utils.reflect.ArrayReflection:
    21:21:public ArrayReflection()
    30:30:public static int getLength(java.lang.Object)
    35:35:public static java.lang.Object get(java.lang.Object,int)
    40:41:public static void set(java.lang.Object,int,java.lang.Object)
com.badlogic.gdx.utils.reflect.ClassReflection:
    23:23:public ClassReflection()
    28:30:public static java.lang.Class forName(java.lang.String)
    41:41:public static boolean isInstance(java.lang.Class,java.lang.Object)
    47:47:public static boolean isAssignableFrom(java.lang.Class,java.lang.Class)
    52:52:public static boolean isMemberClass(java.lang.Class)
    57:57:public static boolean isStaticClass(java.lang.Class)
    63:67:public static java.lang.Object newInstance(java.lang.Class)
    73:78:public static com.badlogic.gdx.utils.reflect.Constructor[] getConstructors(java.lang.Class)
    84:88:public static varargs com.badlogic.gdx.utils.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])
    95:99:public static varargs com.badlogic.gdx.utils.reflect.Constructor getDeclaredConstructor(java.lang.Class,java.lang.Class[])
    105:110:public static com.badlogic.gdx.utils.reflect.Method[] getMethods(java.lang.Class)
    116:120:public static varargs com.badlogic.gdx.utils.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    126:131:public static com.badlogic.gdx.utils.reflect.Method[] getDeclaredMethods(java.lang.Class)
    137:141:public static varargs com.badlogic.gdx.utils.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    147:152:public static com.badlogic.gdx.utils.reflect.Field[] getFields(java.lang.Class)
    158:162:public static com.badlogic.gdx.utils.reflect.Field getField(java.lang.Class,java.lang.String)
    168:173:public static com.badlogic.gdx.utils.reflect.Field[] getDeclaredFields(java.lang.Class)
    179:183:public static com.badlogic.gdx.utils.reflect.Field getDeclaredField(java.lang.Class,java.lang.String)
com.badlogic.gdx.utils.reflect.Constructor
com.badlogic.gdx.utils.reflect.Field
com.badlogic.gdx.utils.reflect.Method
com.badlogic.gdx.utils.reflect.ReflectionException
com.esotericsoftware.tablelayout.BaseTableLayout
com.esotericsoftware.tablelayout.BaseTableLayout$Debug
com.esotericsoftware.tablelayout.Cell
com.esotericsoftware.tablelayout.Toolkit
com.esotericsoftware.tablelayout.Value
com.esotericsoftware.tablelayout.Value$1
com.esotericsoftware.tablelayout.Value$10
com.esotericsoftware.tablelayout.Value$11
com.esotericsoftware.tablelayout.Value$2
com.esotericsoftware.tablelayout.Value$3
com.esotericsoftware.tablelayout.Value$4
com.esotericsoftware.tablelayout.Value$5
com.esotericsoftware.tablelayout.Value$6
com.esotericsoftware.tablelayout.Value$7
com.esotericsoftware.tablelayout.Value$8
com.esotericsoftware.tablelayout.Value$9
com.esotericsoftware.tablelayout.Value$CellValue
com.esotericsoftware.tablelayout.Value$FixedValue
com.esotericsoftware.tablelayout.Value$TableValue
japa.parser.ASTHelper
japa.parser.ASTParser
japa.parser.ASTParser$GTToken
japa.parser.ASTParser$JJCalls
japa.parser.ASTParser$LookaheadSuccess
japa.parser.ASTParser$Modifier
japa.parser.ASTParserConstants
japa.parser.ASTParserTokenManager
japa.parser.JavaCharStream
japa.parser.JavaParser
japa.parser.ParseException
japa.parser.Token
japa.parser.TokenMgrError
japa.parser.ast.BlockComment
japa.parser.ast.Comment
japa.parser.ast.CompilationUnit
japa.parser.ast.ImportDeclaration
japa.parser.ast.LineComment
japa.parser.ast.Node
japa.parser.ast.PackageDeclaration
japa.parser.ast.TypeParameter
japa.parser.ast.body.AnnotationDeclaration
japa.parser.ast.body.AnnotationMemberDeclaration
japa.parser.ast.body.BodyDeclaration
japa.parser.ast.body.ClassOrInterfaceDeclaration
japa.parser.ast.body.ConstructorDeclaration
japa.parser.ast.body.EmptyMemberDeclaration
japa.parser.ast.body.EmptyTypeDeclaration
japa.parser.ast.body.EnumConstantDeclaration
japa.parser.ast.body.EnumDeclaration
japa.parser.ast.body.FieldDeclaration
japa.parser.ast.body.InitializerDeclaration
japa.parser.ast.body.JavadocComment
japa.parser.ast.body.MethodDeclaration
japa.parser.ast.body.ModifierSet
japa.parser.ast.body.Parameter
japa.parser.ast.body.TypeDeclaration
japa.parser.ast.body.VariableDeclarator
japa.parser.ast.body.VariableDeclaratorId
japa.parser.ast.expr.AnnotationExpr
japa.parser.ast.expr.ArrayAccessExpr
japa.parser.ast.expr.ArrayCreationExpr
japa.parser.ast.expr.ArrayInitializerExpr
japa.parser.ast.expr.AssignExpr
japa.parser.ast.expr.AssignExpr$Operator
japa.parser.ast.expr.BinaryExpr
japa.parser.ast.expr.BinaryExpr$Operator
japa.parser.ast.expr.BooleanLiteralExpr
japa.parser.ast.expr.CastExpr
japa.parser.ast.expr.CharLiteralExpr
japa.parser.ast.expr.ClassExpr
japa.parser.ast.expr.ConditionalExpr
japa.parser.ast.expr.DoubleLiteralExpr
japa.parser.ast.expr.EnclosedExpr
japa.parser.ast.expr.Expression
japa.parser.ast.expr.FieldAccessExpr
japa.parser.ast.expr.InstanceOfExpr
japa.parser.ast.expr.IntegerLiteralExpr
japa.parser.ast.expr.IntegerLiteralMinValueExpr
japa.parser.ast.expr.LiteralExpr
japa.parser.ast.expr.LongLiteralExpr
japa.parser.ast.expr.LongLiteralMinValueExpr
japa.parser.ast.expr.MarkerAnnotationExpr
japa.parser.ast.expr.MemberValuePair
japa.parser.ast.expr.MethodCallExpr
japa.parser.ast.expr.NameExpr
japa.parser.ast.expr.NormalAnnotationExpr
japa.parser.ast.expr.NullLiteralExpr
japa.parser.ast.expr.ObjectCreationExpr
japa.parser.ast.expr.QualifiedNameExpr
japa.parser.ast.expr.SingleMemberAnnotationExpr
japa.parser.ast.expr.StringLiteralExpr
japa.parser.ast.expr.SuperExpr
japa.parser.ast.expr.ThisExpr
japa.parser.ast.expr.UnaryExpr
japa.parser.ast.expr.UnaryExpr$Operator
japa.parser.ast.expr.VariableDeclarationExpr
japa.parser.ast.stmt.AssertStmt
japa.parser.ast.stmt.BlockStmt
japa.parser.ast.stmt.BreakStmt
japa.parser.ast.stmt.CatchClause
japa.parser.ast.stmt.ContinueStmt
japa.parser.ast.stmt.DoStmt
japa.parser.ast.stmt.EmptyStmt
japa.parser.ast.stmt.ExplicitConstructorInvocationStmt
japa.parser.ast.stmt.ExpressionStmt
japa.parser.ast.stmt.ForStmt
japa.parser.ast.stmt.ForeachStmt
japa.parser.ast.stmt.IfStmt
japa.parser.ast.stmt.LabeledStmt
japa.parser.ast.stmt.ReturnStmt
japa.parser.ast.stmt.Statement
japa.parser.ast.stmt.SwitchEntryStmt
japa.parser.ast.stmt.SwitchStmt
japa.parser.ast.stmt.SynchronizedStmt
japa.parser.ast.stmt.ThrowStmt
japa.parser.ast.stmt.TryStmt
japa.parser.ast.stmt.TypeDeclarationStmt
japa.parser.ast.stmt.WhileStmt
japa.parser.ast.type.ClassOrInterfaceType
japa.parser.ast.type.PrimitiveType
japa.parser.ast.type.PrimitiveType$Primitive
japa.parser.ast.type.ReferenceType
japa.parser.ast.type.Type
japa.parser.ast.type.VoidType
japa.parser.ast.type.WildcardType
japa.parser.ast.visitor.DumpVisitor
japa.parser.ast.visitor.DumpVisitor$SourcePrinter
japa.parser.ast.visitor.EqualsVisitor
japa.parser.ast.visitor.GenericVisitor
japa.parser.ast.visitor.GenericVisitorAdapter
japa.parser.ast.visitor.ModifierVisitorAdapter
japa.parser.ast.visitor.VoidVisitor
japa.parser.ast.visitor.VoidVisitorAdapter
